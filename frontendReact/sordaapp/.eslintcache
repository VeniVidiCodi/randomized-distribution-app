[{"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/index.js":"1","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterSection/RosterSection.js":"2","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupMenuButton/GroupMenuButton.js":"3","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterItem/RosterItem.js":"4","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupListItem/GroupListItem.js":"5","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/App.js":"6","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/Footer/Footer.js":"7","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/TitleBar/TitleBar.js":"8","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupCard/GroupCard.js":"9","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/NewItemButton/NewItemButton.js":"10","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/Nav/Nav.js":"11","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/ResultPage.js":"12","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js":"13","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupSection/GroupSection.js":"14"},{"size":199,"mtime":1613523508034,"results":"15","hashOfConfig":"16"},{"size":4735,"mtime":1613521046756,"results":"17","hashOfConfig":"16"},{"size":295,"mtime":1613521046732,"results":"18","hashOfConfig":"16"},{"size":589,"mtime":1613521046754,"results":"19","hashOfConfig":"16"},{"size":300,"mtime":1613521046726,"results":"20","hashOfConfig":"16"},{"size":1192,"mtime":1613937120942,"results":"21","hashOfConfig":"16"},{"size":653,"mtime":1613521046717,"results":"22","hashOfConfig":"16"},{"size":2121,"mtime":1613521046758,"results":"23","hashOfConfig":"16"},{"size":1052,"mtime":1613521046723,"results":"24","hashOfConfig":"16"},{"size":388,"mtime":1613521046751,"results":"25","hashOfConfig":"16"},{"size":567,"mtime":1613936735615,"results":"26","hashOfConfig":"16"},{"size":583,"mtime":1613936530374,"results":"27","hashOfConfig":"16"},{"size":337,"mtime":1613936539656,"results":"28","hashOfConfig":"16"},{"size":4330,"mtime":1613521046740,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yr8na",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/index.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterSection/RosterSection.js",["60"],"import React, { Component } from 'react';\nimport './RosterSection.css';\nimport RosterItem from '../RosterItem/RosterItem';\nimport NewItemButton from '../NewItemButton/NewItemButton';\nimport { nanoid } from 'nanoid';\n\nclass RosterSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rosterMax: 40,\n            rosterMin: 2,  // OR min. should be at least the number of groups created...\n            menuRange: [],\n            showRoster: true,\n            selectValue: null,\n            roster: [\n                // {key: null, name: \"Kenly\", group: 1},\n                // {key: null, name: \"Victor\", group: 2}\n            ]\n        }\n\n        this.renderSelectMenu = this.renderSelectMenu.bind(this);\n        this.generateItems = this.generateItems.bind(this);\n        this.addItem = this.addItem.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }    \n\n    //  LIFECYCLE METHODS  -------------------------------------------------\n    componentDidMount() {\n        this.renderSelectMenu();\n    }\n    \n    // Create the options list for dropdown select menu\n    renderSelectMenu() {\n        console.log('RENDERING DROPDOWN...');\n        // Loop through range of min/max to populate the menuRange array\n        let menuRange = [];\n        // let min = this.state.rosterMin;\n        let max = this.state.rosterMax;\n\n        for (let i=0; i<=max; i++) {\n            const key = nanoid();\n            const obj = {\n                key: key, \n                value: i\n            };\n            menuRange.push(obj);\n            console.log(menuRange);\n        }\n\n        this.setState({\n            menuRange: menuRange\n        });\n        // console.log('MENU RANGE: ' + menuRange);\n    }\n\n    //  EVENT HANDLERS  -------------------------------------------------\n    handleChange(event) {\n        this.setState({selectValue: event.target.value});\n    }\n\n    handleSubmit(event) {\n        alert('You chose: ' + this.state.selectValue);\n        event.preventDefault();\n        this.generateItems(this.state.selectValue);\n    }\n\n    // CREATE GENERIC LIST ITEMS BASED ON CHOSEN MENU SELECT OPTION \n    generateItems(num) {\n        console.log('Generate roster list based on...', num);\n\n        let roster = [];    // Reset the roster items array\n        let showRoster = this.state.showRoster;\n\n        // Populate the roster array with chosen number of entries\n        for (let i=0; i<num; i++) {\n            let genericName = \"Item \" + (i + 1);\n            let key = nanoid();\n            let item = {                // TO DO:  Replace with formatted class?\n                name: genericName,\n                key : key,\n                group: null\n            }\n\n            roster.push(item);\n        }\n\n        this.setState({\n            roster: roster\n        });\n    }\n\n    addItem() {\n        console.log('Add Roster Item...')\n        let index  = this.state.roster.length;\n        let roster = this.state.roster;\n        let newIndex = index + 1;\n        let item = {\n                        key: nanoid(),\n                        name : 'Item' + newIndex,\n                        group: ''\n                    }  // Replace with class?\n        roster.push(item);\n        this.setState({roster: roster});\n    }\n\n    \n    render() {\n        return (\n            <div className=\"roster-container\">\n\n                <form className=\"roster-nav\" onSubmit={this.handleSubmit}>\n                    <label className=\"roster-header-caption\"> \n                        Roster/Items:\n                        <select name=\"roster\" id=\"roster-select\" value={this.state.value} onChange={this.handleChange}>\n                            {this.state.menuRange.map(num => \n                                <option key={num.key} value={num.value}>{num.value}</option>\n                            )}\n                        </select>\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n\n                <div className=\"roster-items-container\">\n                    <div id=\"roster-display-wrapper\">\n                        {this.state.roster.map(item => \n                            <RosterItem \n                                key={item.key} \n                                name={item.name} />\n                        )}\n                        {(this.state.roster.length < this.state.rosterMax) ? \n                            <NewItemButton onClick={this.addItem} /> :\n                            <div></div>\n                        } \n                    </div>\n                </div>\n            </div>\n        )\n    }\n }\nexport default RosterSection;",["61","62"],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupMenuButton/GroupMenuButton.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterItem/RosterItem.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupListItem/GroupListItem.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/App.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/Footer/Footer.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/TitleBar/TitleBar.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupCard/GroupCard.js",["63"],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/NewItemButton/NewItemButton.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/Nav/Nav.js",["64"],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/ResultPage.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js",["65"],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupSection/GroupSection.js",[],{"ruleId":"66","severity":1,"message":"67","line":74,"column":13,"nodeType":"68","messageId":"69","endLine":74,"endColumn":23},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"66","severity":1,"message":"74","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":21},{"ruleId":"75","severity":1,"message":"76","line":15,"column":17,"nodeType":"77","endLine":15,"endColumn":29},{"ruleId":"78","severity":1,"message":"79","line":4,"column":3,"nodeType":"80","messageId":"81","endLine":7,"endColumn":4},"no-unused-vars","'showRoster' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["82"],"no-negated-in-lhs",["83"],"'GroupListItem' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]