[{"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/index.js":"1","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js":"2","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/ResultPage.js":"3","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/LandingPage.js":"4","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupCard/GroupCard.js":"5","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/utils/queries.js":"6","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/NewItemButton/NewItemButton.js":"7","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/Nav/Nav.js":"8","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/Footer/Footer.js":"9","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupSection/GroupSection.js":"10","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterSection/RosterSection.js":"11","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/App.js":"12","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/TitleBar/TitleBar.js":"13","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/FooterButton/FooterButton.js":"14","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/utils/groupClass.js":"15","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultDisplay/ResultDisplay.js":"16","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterItem/RosterItem.js":"17","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultCard/ResultCard.js":"18","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultsTitle/ResultsTitle.js":"19"},{"size":199,"mtime":1613523508034,"results":"20","hashOfConfig":"21"},{"size":6380,"mtime":1626037349618,"results":"22","hashOfConfig":"21"},{"size":6081,"mtime":1624724515887,"results":"23","hashOfConfig":"21"},{"size":2802,"mtime":1624915254216,"results":"24","hashOfConfig":"21"},{"size":3456,"mtime":1626053883854,"results":"25","hashOfConfig":"21"},{"size":1194,"mtime":1624722208173,"results":"26","hashOfConfig":"21"},{"size":388,"mtime":1614637568426,"results":"27","hashOfConfig":"21"},{"size":570,"mtime":1625541533455,"results":"28","hashOfConfig":"21"},{"size":1294,"mtime":1626047744685,"results":"29","hashOfConfig":"21"},{"size":1369,"mtime":1624919659786,"results":"30","hashOfConfig":"21"},{"size":2944,"mtime":1624917521716,"results":"31","hashOfConfig":"21"},{"size":1077,"mtime":1624918195023,"results":"32","hashOfConfig":"21"},{"size":1151,"mtime":1622914306682,"results":"33","hashOfConfig":"21"},{"size":279,"mtime":1620869659478,"results":"34","hashOfConfig":"21"},{"size":1519,"mtime":1622908668749,"results":"35","hashOfConfig":"21"},{"size":1093,"mtime":1622914306677,"results":"36","hashOfConfig":"21"},{"size":1823,"mtime":1622914306679,"results":"37","hashOfConfig":"21"},{"size":811,"mtime":1621984243470,"results":"38","hashOfConfig":"21"},{"size":616,"mtime":1624722208172,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1yr8na",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/index.js",[],["84","85"],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/ResultPage.js",["86"],"\nimport React, { useState } from 'react';\nimport Nav from '../Nav/Nav';\nimport ResultDisplay from '../ResultDisplay/ResultDisplay';\nimport Footer from '../Footer/Footer';\nimport ResultsTitle from '../ResultsTitle/ResultsTitle';\nimport { Group } from '../../utils/groupClass.js';  //watch out for utils. keep for merge\nimport { Redirect } from 'react-router-dom';\nimport { postRequest } from \"../../utils/queries.js\";\n\nimport \"./ModalPassword.css\";\n\nimport Modal from \"react-modal\";\nModal.setAppElement(\"#root\");\n\n\nfunction ResultsPage(props) {\n\n  let GroupObject = new Group();\n\n  if (props.location.fromLandingPage) {\n    GroupObject = () => {\n       let tempGroup = new Group();\n       tempGroup.persons = props.location.json.persons;\n       tempGroup.groupNames = props.location.json.groupNames;\n       tempGroup.setProjectName(props.location.json.projectName);\n\n       return tempGroup;\n     }\n   } else {\n     GroupObject = props.location.GroupObject;\n   }\n\n\n  // –––––––\n  //  State\n  // –––––––\n\n  const [aGroupObject, setGroupObject] = useState(GroupObject);\n  // const [fromLandingPage, setFromLandingPage] = useState(props.location.fromLandingPage);\n  // const [fromInputPage, setFromInputPage] = useState(props.location.fromInputPage);\n  const [aJson, setAjson] = useState(props.location.json);\n  const [editButtonClicked, setEditButtonClicked] = useState(false);\n  const [saveButtonClicked, setSaveButtonClicked] = useState(false);\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Check console to see from which page is being received\n  // console.log(\"FROM LANDING:\", fromLandingPage);\n  // console.log(\"FROM INPUT:\", fromInputPage);\n\n\n  // ––––––––\n  // Behavior\n  // ––––––––\n\n  async function handleOnClickSave() {\n    console.log(\"SAVE BUTTON CLICKED...\");\n    //save to db by using utility component\n\n    const groups = new Group();\n\n    // groups.setProjectName(\"Project Safari\");\n    // groups.addPerson(new Person(\"Lion\", 1));\n    // groups.addPerson(new Person(\"Elephant\", 2));\n    // groups.addGroupNames(new GroupName(\"Section Danger\"));\n    // groups.addGroupNames(new GroupName(\"Section Safe\"));\n    groups.setProjectName(aGroupObject.projectName);\n    groups.persons = aGroupObject.persons;\n    groups.groupNames = aGroupObject.groupNames;\n    var myJSON = JSON.stringify(groups);  //aGroupObject\n\n    console.log(JSON.stringify(JSON.parse(myJSON), null, 2));\n\n    // let json = postRequest(myJSON).then(result => {\n    //   console.log(result);\n    //   return result;\n    // });\n    await call(myJSON);\n\n    setSaveButtonClicked(!saveButtonClicked);\n  }\n\n  async function call(myJSON) {\n     const json = await postRequest(myJSON);  //call the API to get the user data\n      if(json !== null) {\n        console.log(json);\n\n        setAjson(json);\n      } else {\n        console.log(\"No Project returned; Object:null\");\n      }\n  }\n\n  //when the edit button is clicked, setEditButtonClicked is set to true which triggers the conditional below function.\n  function handleOnClickEdit(){\n    if(saveButtonClicked)\n      toggleModal();\n    else if (props.location.fromInputPage)\n      setEditButtonClicked(true);\n    else\n      toggleModal();\n\n  }\n\n  function toggleModal() {\n    setIsOpen(!isOpen);\n  }\n\n\n  //–––––––––\n  //–– Modal\n  //–––––––––\n  const [password, setPassword] = useState(\"\");\n\n  function handleChange(event) {\n    const tempPassword = event.target.value;\n    setPassword(tempPassword);\n    event.preventDefault();\n  }\n\n  function handleSubmit(event) {\n    if (password === aJson.accessPassword)\n      setEditButtonClicked(true);\n    event.preventDefault();\n  }\n\n\n\n  // Checks and sends correct state data type to input page\n  if (editButtonClicked){\n    if (props.location.fromLandingPage) {\n      return <Redirect to={{pathname: '/grouper', json: aJson, fromResultPage: true, fromLandingPage: false, fromInputPage: false}}/>;\n    } else {\n      return <Redirect to={{pathname: '/grouper', GroupObject: aGroupObject, fromResultPage: true, fromLandingPage: false, fromInputPage: false}}/>;\n    }\n  }\n\n  function displayModal() {\n    return(\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={toggleModal}\n      contentLabel=\"My dialog\"\n      className=\"mymodal\"\n      overlayClassName=\"myoverlay\"\n      closeTimeoutMS={250}\n      shouldCloseOnOverlayClick={false}\n      >\n      <div className=\"projectIDText\">Project ID: {aJson.uniqueID}</div>\n      <div className=\"inputPasswordField\">\n        <form onSubmit={handleSubmit}>\n          <input\n            value={password}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"AccessID\"\n            placeholder=\"Enter Passcode\"\n            className=\"textField\"\n            maxLength=\"7\" />\n          <button type=\"submit\" name=\"getResultsPage\" className=\"submit\">GO</button>\n        </form>\n      </div>\n      <button className=\"closeButton\" onClick={toggleModal}>Close</button>\n    </Modal>\n    );\n  }\n\n  function resultsTitle() {\n    if (props.location.fromLandingPage || saveButtonClicked) {\n      return(\n        <ResultsTitle title={aGroupObject.projectName} accessID={aJson.uniqueID} useJson={true}/>\n      )\n    }\n    else {\n      return(\n        <ResultsTitle title={aGroupObject.projectName} useJson={false}/>\n      )\n    }\n  }\n\n\n  return (\n      <div className=\"page-wrapper\">\n        <header>\n          <Nav />\n          {resultsTitle()}\n        </header>\n        <main id=\"entry-container\">\n          <ResultDisplay groupObject={aGroupObject}/>\n        </main>\n          <Footer\n            // value=\"Save\"\n            fromInputPage={props.location.fromInputPage}  /* need fromLandingPage boolean */\n            fromLandingPage={props.location.fromLandingPage}\n            saveButtonClicked={saveButtonClicked}\n            onClickEdit={handleOnClickEdit}\n            onClickSave={handleOnClickSave}/>\n          {(props.location.fromLandingPage || saveButtonClicked) ? displayModal() : null}\n\n      </div>\n\n  );\n\n}\n\nexport default ResultsPage;\n","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/LandingPage.js",[],["87","88"],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupCard/GroupCard.js",["89"],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/utils/queries.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/NewItemButton/NewItemButton.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/Nav/Nav.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/Footer/Footer.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupSection/GroupSection.js",["90","91"],"import React, { useEffect, useState } from 'react';\nimport './GroupSection.css';\nimport NewGroupButton from '../NewGroupButton/NewGroupButton';\nimport GroupCard from '../GroupCard/GroupCard';\nimport { nanoid } from 'nanoid';\n\n\nfunction GroupSection (props) {\n    const max = 8;\n\n    // useEffect(() => {\n    //     console.log(\"GROUP SECTION mounted\");\n    // })\n    \n    return (\n        <div className=\"group-section\">\n\n            <header className=\"group-section-header\">\n                <div className=\"group-header-caption\">Groups</div>\n                {props.groupNames.length < max ? \n                        <NewGroupButton onClick={props.addGroup} /> \n                        : <div></div>\n                }\n            </header>\n\n            <div className=\"group-items-container\">\n                <div id=\"groups-display-wrapper\">\n                    {props.groupNames.map((group, index) => \n                        <GroupCard \n                            key={nanoid()} \n                            title={group.name}\n                            index={index}\n                            updateGroupTitle={props.updateGroupTitle}\n                            deleteGroup={props.deleteGroup} \n                        />\n                    )}\n                </div>\n            </div>   \n                \n        </div>\n    );\n}\n\nexport default GroupSection;","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterSection/RosterSection.js",["92","93"],"import React, { useEffect, useState } from 'react';\nimport './RosterSection.css';\nimport RosterItem from '../RosterItem/RosterItem';\nimport NewItemButton from '../NewItemButton/NewItemButton';\nimport { nanoid } from 'nanoid';\n\nfunction RosterSection (props) {\n    const rosterMax = 40;\n    // const rosterMin = props.rosterItems;\n    \n\n    // // CREATE GENERIC LIST ITEMS BASED ON CHOSEN MENU SELECT OPTION \n    // generateItems(num) {\n    //     console.log('Generate roster list based on...', num);\n\n    //     let roster = [];    // Reset the roster items array\n    //     let showRoster = this.state.showRoster;\n\n    //     // Populate the roster array with chosen number of entries\n    //     for (let i=0; i<num; i++) {\n    //         let genericName = \"Item \" + (i + 1);\n    //         let key = nanoid();\n    //         let item = {                // TO DO:  Replace with formatted class?\n    //             description: genericName,\n    //             key : key,\n    //             group: null\n    //         }\n\n    //         roster.push(item);\n    //     }\n\n    //     this.setState({\n    //         roster: roster\n    //     });\n    // }\n    \n\n//     // Add multiple entries to group array from MODAL INPUT\n//     const generateRoster = (e) => {\n//         console.log(\"Generating multiple roster items...\");\n//         let qty = e.target.innerText;\n//         // let groups = this.state.groups;\n//         // let showAddButton = this.state.showAddButton;\n//         // showAddButton = false;\n\n//         // Populate the groups array with chosen number of entries\n//         for (let i=0; i<qty; i++) {\n//             this.addItem();\n//         }\n\n//         // this.setState({\n//         //     groups: groups,\n//         //     showGroupMenu: showGroupMenu\n//         // });\n//     }\n\n\n        return (\n            <div className=\"roster-section\">\n\n                <header className=\"roster-section-header\">\n                    <div className=\"roster-header-caption\">\n                        Roster/Items\n                    </div>\n                    {props.rosterItems.length < rosterMax ? \n                        <NewItemButton onClick={props.addItem} /> :\n                        <div></div>\n                    } \n                </header>\n\n                <div className=\"roster-items-container\">\n                    <div id=\"roster-display-wrapper\">\n                        {props.rosterItems.map((item, index) => \n                            <RosterItem \n                                key={nanoid()} \n                                title={item.name}\n                                index={index}\n                                updateItemName={props.updateItemName}\n                                deleteItem={props.deleteItem} \n                            />\n                        )}\n                    </div>\n                </div>\n                \n            </div>\n        )\n    }\nexport default RosterSection;","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/App.js",[],["94","95"],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/TitleBar/TitleBar.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/FooterButton/FooterButton.js",["96"],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/utils/groupClass.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultDisplay/ResultDisplay.js",["97"],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterItem/RosterItem.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultCard/ResultCard.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultsTitle/ResultsTitle.js",["98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":39,"column":24,"nodeType":"105","messageId":"106","endLine":39,"endColumn":38},{"ruleId":"99","replacedBy":"107"},{"ruleId":"101","replacedBy":"108"},{"ruleId":"103","severity":1,"message":"109","line":1,"column":8,"nodeType":"105","messageId":"106","endLine":1,"endColumn":9},{"ruleId":"103","severity":1,"message":"110","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":26},{"ruleId":"103","severity":1,"message":"111","line":1,"column":28,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"103","severity":1,"message":"110","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":26},{"ruleId":"103","severity":1,"message":"111","line":1,"column":28,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"99","replacedBy":"112"},{"ruleId":"101","replacedBy":"113"},{"ruleId":"103","severity":1,"message":"114","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":26},{"ruleId":"103","severity":1,"message":"114","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":26},{"ruleId":"103","severity":1,"message":"114","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":26},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'setGroupObject' is assigned a value but never used.","Identifier","unusedVar",["115"],["116"],"'e' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.",["115"],["116"],"'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]