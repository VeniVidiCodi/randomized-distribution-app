[{"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterSection/RosterSection.js":"1","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterItem/RosterItem.js":"2","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/utils/groupClass.js":"3","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js":"4","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupCard/GroupCard.js":"5","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupSection/GroupSection.js":"6","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/Footer/Footer.js":"7","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/ResultPage.js":"8","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/LandingPage.js":"9","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/TitleBar/TitleBar.js":"10","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultDisplay/ResultDisplay.js":"11","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultCard/ResultCard.js":"12","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/NoMatch.js":"13","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/App.js":"14","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/Nav/Nav.js":"15","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/FooterButton/FooterButton.js":"16","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/utils/queries.js":"17","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/NewItemButton/NewItemButton.js":"18"},{"size":2944,"mtime":1621404817810,"results":"19","hashOfConfig":"20"},{"size":1823,"mtime":1621965576320,"results":"21","hashOfConfig":"20"},{"size":1519,"mtime":1621984733362,"results":"22","hashOfConfig":"20"},{"size":7433,"mtime":1622495058540,"results":"23","hashOfConfig":"20"},{"size":2634,"mtime":1621965660775,"results":"24","hashOfConfig":"20"},{"size":1369,"mtime":1621404840311,"results":"25","hashOfConfig":"20"},{"size":1031,"mtime":1621966644884,"results":"26","hashOfConfig":"20"},{"size":3069,"mtime":1621987314776,"results":"27","hashOfConfig":"20"},{"size":2535,"mtime":1621966339285,"results":"28","hashOfConfig":"20"},{"size":1151,"mtime":1621965818419,"results":"29","hashOfConfig":"20"},{"size":1084,"mtime":1621967958075,"results":"30","hashOfConfig":"20"},{"size":811,"mtime":1621984243470,"results":"31","hashOfConfig":"20"},{"size":1044,"mtime":1619488352831,"results":"32","hashOfConfig":"20"},{"size":1072,"mtime":1619805926556,"results":"33","hashOfConfig":"20"},{"size":570,"mtime":1619488352859,"results":"34","hashOfConfig":"20"},{"size":279,"mtime":1620869659478,"results":"35","hashOfConfig":"20"},{"size":1108,"mtime":1620869659481,"results":"36","hashOfConfig":"20"},{"size":388,"mtime":1614637568426,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1yr8na",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterSection/RosterSection.js",["81","82"],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterItem/RosterItem.js",[],["83","84"],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/utils/groupClass.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js",["85"],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupCard/GroupCard.js",["86"],"import e from 'cors';\nimport React, { useState } from 'react';\nimport './GroupCard.css';\n\n\nfunction GroupCard(props) {\n    const [showTitle, setShowTitle] = useState(true);\n    const [title, setTitle] = useState(props.title);\n\n    const handleChange = e => {\n        // console.log(e.target.value);\n        setTitle(e.target.value);\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        toggleTitle();\n        props.updateGroupTitle(title, props.index);\n    }\n\n    const handleKeypress = e => {\n        //it triggers by pressing the enter key\n        if (e.keyCode === 13) {\n        handleSubmit(e, props.index);\n        }\n    };\n    \n    const toggleTitle = () => {\n        if (showTitle) {\n            // console.log(\"T -> F\");\n            setShowTitle(false);\n        } else {\n            // console.log(\"F -> T\");\n            setShowTitle(true);\n        };\n    }\n\n\n    return(\n        <div className=\"group-container\">\n            <div className=\"group-card--header\">\n                { showTitle ?\n                    <div className=\"group-title\" onClick={toggleTitle}>{title}</div>\n                    :\n                    <form className=\"input-wrapper\" >\n                        <label>\n                            <input \n                                id=\"project-title--input\" \n                                type=\"text\" \n                                name=\"name\" \n                                placeholder={title} \n                                onChange={handleChange} \n                                onKeyPress={handleKeypress} \n                                value={title} \n                                autoFocus\n                            />\n                        </label>\n                        <input className=\"title-submit-button\" onClick={handleSubmit} type=\"submit\" value=\"✓\" />\n                        {/* <input className=\"title-submit-button\" onClick={toggleTitle} type=\"submit\" value=\"✓\" /> */}\n                    </form>\n                }\n\n                <button className=\"group-del-btn\" onClick={props.deleteGroup} value={props.index}>x</button>\n            </div>\n            \n            <div className=\"group-items--display\">\n                {/* Render Groups for ResultPage */}\n                {/* <ResultItem entry={entries[0]} /> */}\n                {/* {this.state.entries.map((entry) => \n                    <GroupListItem entry={entry} />\n                    // <GroupListItem>{entry}</GroupListItem>\n                )} */}\n            </div>\n            {/* <div className=\"group-del-btn2\">x</div> */}\n        </div>\n    );\n}\n\nexport default GroupCard;","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupSection/GroupSection.js",["87","88"],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/Footer/Footer.js",["89"],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/ResultPage.js",["90","91","92"],"\nimport React, { useState,  } from 'react';\nimport Nav from '../Nav/Nav';\nimport ResultDisplay from '../ResultDisplay/ResultDisplay';\nimport Footer from '../Footer/Footer';\nimport ResultsTitle from '../ResultsTitle/ResultsTitle';\nimport {Group, Person, GroupName} from '../../utils/groupClass.js';  //watch out for utils. keep for merge\nimport {Redirect} from 'react-router-dom';\n//import { nanoid } from 'nanoid';\nimport {getRequest, postRequest} from \"../../utils/queries.js\";\n\n\nfunction ResultsPage(props) {\n\n  let GroupObject = new Group();\n  if (props.location.isTrue) {\n    GroupObject = () => {\n       let tempGroup = new Group();\n       tempGroup.persons = props.location.json.persons;\n       tempGroup.groupNames = props.location.json.groupNames;\n       tempGroup.setProjectName(props.location.json.projectName);\n\n       return tempGroup;\n     }\n   } else {\n    //  GroupObject = props.state.GroupObject;\n     GroupObject = props.location.GroupObject;\n   }\n\n   // –––––––\n   //  State\n   // –––––––\n   const [aGroupObject, setGroupObject] = useState(GroupObject);\n   const [fromLandingPage, setFromLandinPage] = useState(props.location.isTrue);\n   const [aJson, setAjson] = useState(props.location.json);\n   const [editButtonClicked, setEditButtonClicked] = useState(false)\n\n\n  function handleOnClickSave() {\n    console.log(\"SAVE BUTTON CLICKED...\");\n    //save to db by using utility component\n\n    const groups = new Group();\n\n    groups.setProjectName(\"Project Safari\");\n    groups.addPerson(new Person(\"Lion\", 1));\n    groups.addPerson(new Person(\"Elephant\", 2));\n    groups.addGroupNames(new GroupName(\"Section Danger\"));\n    groups.addGroupNames(new GroupName(\"Section Safe\"));\n    var myJSON = JSON.stringify(groups);  //aGroupObject\n\n    console.log(myJSON);\n    console.log(JSON.stringify(JSON.parse(myJSON), null, 2));\n    const json = postRequest(myJSON);\n    setAjson(json);\n\n  }\n\n\n  //when the edit button is clicked, setEditButtonClicked is set to true which triggers the conditional below function.\n  function handleOnClickEdit(){\n    console.log(\"EDIT BUTTON CLICKED...\");\n    setEditButtonClicked(true);\n  }\n\n\n  //checks to see if the the edit button is clicked and will redirect the page to inputPage and send state with it.\n  if (editButtonClicked){\n    if (fromLandingPage)\n       return <Redirect to={{pathname: '/grouper', GroupObject: aGroupObject, isTrue: fromLandingPage}}/>;\n\n    return <Redirect to={{pathname: '/grouper', json: aJson, isTrue: !fromLandingPage, fromResultPage: true}}/>;\n  }\n\n\n  return (\n      <div className=\"page-wrapper\">\n        <header>\n          <Nav />\n          <ResultsTitle title={aGroupObject.projectName}/>\n        </header>\n        <main id=\"entry-container\">\n          <ResultDisplay grpObject={aGroupObject}/>\n        </main>\n          <Footer\n            value=\"Save\"\n            isTrue={false}  /* need fromLandingPage boolean */\n            onClickEdit={handleOnClickEdit}\n            onClickSave={handleOnClickSave}/>\n      </div>\n  );\n\n}\n\nexport default ResultsPage;\n","/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/LandingPage.js",["93"],"import React, { useState } from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport logo from '../../mallard.svg';\nimport './LandingPage.css';\nimport {getRequest, postRequest} from \"../../utils/queries.js\";\n\n// DB fetch entry with password: 7JWHR5\n\nfunction LandingPage() {\n\n  const [aJson, setAjson] = useState(null);\n  const [ifFetchSuccess, setIfFetchSuccess] = useState(false);\n  const [idNum, setIdNum] = useState(\"\");\n\n\n  async function getGroup() {\n     const json = await getRequest(idNum);  //call the API to get the\n      if(json !== null) {\n        console.log(json);\n        setAjson(json);\n        setIfFetchSuccess(true);\n      } else {\n        console.log(\"No Project returned; Object:null\");\n      }\n  }\n\n\n  function handleSubmit(event) {\n    getGroup();\n    event.preventDefault();\n  }\n\n\n  function handleChange(event) {\n    const tempIdNum = event.target.value;\n    setIdNum(tempIdNum);\n    event.preventDefault();\n  }\n\n\n  if(ifFetchSuccess) {\n    return <Redirect push to={{pathname: '/results', json: aJson, isTrue: true}}/>;\n  }\n//return <Redirect push to={{pathname: '/results', GroupObject: aGroupObject, isTrue: false}}/>;  //use in input page\n\n\n    return (\n      <div className=\"wrapper\">\n        <div className=\"topSection\">\n          <img src={logo} alt=\"duck logo\" />\n        </div>\n\n        <div className=\"bottomSection\">\n          <div className=\"buttonChild\">\n            <Link to=\"/grouper\">\n              <button type=\"submit\" value=\"Submit\" id=\"btn-start\">Create Group</button>\n            </Link>\n          </div>\n\n          <div className=\"inputChild\">\n            <form onSubmit={handleSubmit}>\n              <input\n                value={idNum}\n                onChange={handleChange}\n                type=\"text\"\n                name=\"AccessID\"\n                placeholder=\"Enter ID\"\n                className=\"textField\"\n                maxLength=\"7\" />\n              <button type=\"submit\" name=\"getResultsPage\" className=\"submit\">GO</button>\n            </form>\n          </div>\n\n        </div>\n      </div>\n    );\n}\n\n\nexport default LandingPage;\n\n\n\n\n/*\n  async function getGroup() {\n    await fetch(`http://localhost:3050/group/${idNum}`)\n      .then(res => res.json())\n      .then(json => {\n        if(json !== null) {\n          console.log(json);\n          setAjson(json);\n          setIfFetchSuccess(true);\n        }\n        else {\n          console.log(\"No Project returned; Object:null\");\n        }\n      })\n      .catch(e => {\n        console.log(\"Error\");\n      })\n  }\n*/\n",["94","95"],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/TitleBar/TitleBar.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultDisplay/ResultDisplay.js",["96"],"import React, { Component } from 'react';\n// import ResultItem from '../ResultItem/ResultItem';\nimport ResultCard from '../ResultCard/ResultCard.js';\nimport './ResultDisplay.css';\nimport { nanoid } from 'nanoid';\n\nexport default function ResultDisplay (props) {\n  console.log(props.grpObject);\n\n  return (\n      <div className=\"results-section\">\n\n          <header className=\"results-section-header\">\n              <div className=\"results-header-caption\">Groups</div>\n          </header>\n\n          <div className=\"results-items-container\">\n                  {/* {this.state.aGroupObject.getGroupNames().map((group, index) => */}\n                  {props.grpObject.groupNames.map((group, index) =>\n                      <ResultCard\n                          key={nanoid()}\n                          title={group.name}\n                          groupNumber={index}\n                          persons={props.grpObject.persons} \n                          // persons={this.state.aGroupObject.persons} \n                      />\n                  )}\n          </div>\n\n      </div>\n      );\n}",["97","98"],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultCard/ResultCard.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/NoMatch.js",["99"],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/App.js",["100"],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/Nav/Nav.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/FooterButton/FooterButton.js",["101"],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/utils/queries.js",[],"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/NewItemButton/NewItemButton.js",[],{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"106","line":1,"column":28,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"102","severity":1,"message":"111","line":9,"column":8,"nodeType":"104","messageId":"105","endLine":9,"endColumn":9},{"ruleId":"102","severity":1,"message":"111","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":9},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"106","line":1,"column":28,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"102","severity":1,"message":"112","line":1,"column":18,"nodeType":"104","messageId":"105","endLine":1,"endColumn":27},{"ruleId":"102","severity":1,"message":"113","line":10,"column":9,"nodeType":"104","messageId":"105","endLine":10,"endColumn":19},{"ruleId":"102","severity":1,"message":"114","line":33,"column":25,"nodeType":"104","messageId":"105","endLine":33,"endColumn":39},{"ruleId":"102","severity":1,"message":"115","line":34,"column":28,"nodeType":"104","messageId":"105","endLine":34,"endColumn":45},{"ruleId":"102","severity":1,"message":"116","line":5,"column":21,"nodeType":"104","messageId":"105","endLine":5,"endColumn":32},{"ruleId":"107","replacedBy":"117"},{"ruleId":"109","replacedBy":"118"},{"ruleId":"102","severity":1,"message":"112","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"107","replacedBy":"119"},{"ruleId":"109","replacedBy":"120"},{"ruleId":"102","severity":1,"message":"121","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":12},{"ruleId":"102","severity":1,"message":"112","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"112","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-native-reassign",["122"],"no-negated-in-lhs",["123"],"'e' is defined but never used.","'Component' is defined but never used.","'getRequest' is defined but never used.","'setGroupObject' is assigned a value but never used.","'setFromLandinPage' is assigned a value but never used.","'postRequest' is defined but never used.",["122"],["123"],["122"],["123"],"'logo' is defined but never used.","no-global-assign","no-unsafe-negation"]