[{"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/index.js":"1","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultsTitle/ResultsTitle.js":"2","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultCard/ResultCard.js":"3","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/Nav/Nav.js":"4","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultDisplay/ResultDisplay.js":"5","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/Footer/Footer.js":"6","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/InputCSV/InputCSV.js":"7","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/InputCSV/CSVmodal.js":"8","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterSection/RosterSection.js":"9","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/ModalInput/ModalInput.js":"10","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js":"11","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupCard/GroupCard.js":"12","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/utils/groupClass.js":"13","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/App.js":"14","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/TitleBar/TitleBar.js":"15","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/utils/queries.js":"16","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/ResultPage.js":"17"},{"size":199,"mtime":1626471479917,"results":"18","hashOfConfig":"19"},{"size":616,"mtime":1626471479915,"results":"20","hashOfConfig":"19"},{"size":811,"mtime":1626506780039,"results":"21","hashOfConfig":"19"},{"size":570,"mtime":1626471479911,"results":"22","hashOfConfig":"19"},{"size":1093,"mtime":1626471479913,"results":"23","hashOfConfig":"19"},{"size":1294,"mtime":1626471479907,"results":"24","hashOfConfig":"19"},{"size":1856,"mtime":1626500573262,"results":"25","hashOfConfig":"19"},{"size":1443,"mtime":1626505568386,"results":"26","hashOfConfig":"19"},{"size":2921,"mtime":1626501094516,"results":"27","hashOfConfig":"19"},{"size":2566,"mtime":1626499658455,"results":"28","hashOfConfig":"19"},{"size":8909,"mtime":1626505348991,"results":"29","hashOfConfig":"19"},{"size":2450,"mtime":1626471479908,"results":"30","hashOfConfig":"19"},{"size":1519,"mtime":1626471479920,"results":"31","hashOfConfig":"19"},{"size":1077,"mtime":1626471479903,"results":"32","hashOfConfig":"19"},{"size":1172,"mtime":1626471479917,"results":"33","hashOfConfig":"19"},{"size":1194,"mtime":1626471479921,"results":"34","hashOfConfig":"19"},{"size":6081,"mtime":1626510134109,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1c826kz",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/index.js",[],["75","76"],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultsTitle/ResultsTitle.js",["77"],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultCard/ResultCard.js",[],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/Nav/Nav.js",[],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultDisplay/ResultDisplay.js",["78"],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/Footer/Footer.js",[],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/InputCSV/InputCSV.js",["79","80"],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/InputCSV/CSVmodal.js",["81","82","83"],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterSection/RosterSection.js",["84","85"],"import React, { useEffect, useState } from 'react';\nimport './RosterSection.css';\nimport RosterItem from '../RosterItem/RosterItem';\nimport NewItemButton from '../NewItemButton/NewItemButton';\nimport InputCSV from '../InputCSV/InputCSV'\nimport { nanoid } from 'nanoid';\n\nfunction RosterSection (props) {\n  const rosterMax = 40;\n\n  function handleArrayFromInputCSV(arrayFromInputCSV) {\n    props.handleArrayFromRosterSection(arrayFromInputCSV);\n  }\n\n  return (\n      <div className=\"roster-section\">\n          <header className=\"roster-section-header\">\n              <div className=\"roster-header-caption\">\n                  Roster/Items\n              </div>\n              <InputCSV className='csvInputModal' handleArray={handleArrayFromInputCSV}/>\n              {props.rosterItems.length < rosterMax ?\n                  <NewItemButton onClick={props.addItem} /> :\n                  <div></div>\n              }\n          </header>\n          <div className=\"roster-items-container\">\n              <div id=\"roster-display-wrapper\">\n                  {props.rosterItems.map((item, index) =>\n                      <RosterItem\n                          key={nanoid()}\n                          title={item.name}\n                          index={index}\n                          updateItemName={props.updateItemName}\n                          deleteItem={props.deleteItem}\n                      />\n                  )}\n              </div>\n          </div>\n      </div>\n  )\n}\nexport default RosterSection;\n\n\n\n// const rosterMin = props.rosterItems;\n\n\n// // CREATE GENERIC LIST ITEMS BASED ON CHOSEN MENU SELECT OPTION\n// generateItems(num) {\n//     console.log('Generate roster list based on...', num);\n\n//     let roster = [];    // Reset the roster items array\n//     let showRoster = this.state.showRoster;\n\n//     // Populate the roster array with chosen number of entries\n//     for (let i=0; i<num; i++) {\n//         let genericName = \"Item \" + (i + 1);\n//         let key = nanoid();\n//         let item = {                // TO DO:  Replace with formatted class?\n//             description: genericName,\n//             key : key,\n//             group: null\n//         }\n\n//         roster.push(item);\n//     }\n\n//     this.setState({\n//         roster: roster\n//     });\n// }\n\n\n//     // Add multiple entries to group array from MODAL INPUT\n//     const generateRoster = (e) => {\n//         console.log(\"Generating multiple roster items...\");\n//         let qty = e.target.innerText;\n//         // let groups = this.state.groups;\n//         // let showAddButton = this.state.showAddButton;\n//         // showAddButton = false;\n\n//         // Populate the groups array with chosen number of entries\n//         for (let i=0; i<qty; i++) {\n//             this.addItem();\n//         }\n\n//         // this.setState({\n//         //     groups: groups,\n//         //     showGroupMenu: showGroupMenu\n//         // });\n//     }\n",["86","87"],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/ModalInput/ModalInput.js",["88"],"import React, { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\n// Modal\n// –––––\nimport Modal from \"react-modal\";\nimport \"./ModalInputGroup.css\";\n\nModal.setAppElement(\"#root\");\n\n\nfunction SetupModal(props) {\n\n  const [groupNumArray, setGroupNumArray] = useState( () => createGroupNums() );\n  const [rosterNumArray, setRosterNumArray] = useState( () => createRosterNums() );\n  const [minNum, setMinNum] = useState(2);\n  const [isOpen, setIsOpen] = useState(true);\n  const [numGroupsValue, setNumGroupsValue] = useState(2);\n  const [numRosterValue, setNumRosterValue] = useState(2);\n\n\n  function handleGroupChange(event) {\n    setNumGroupsValue(event.target.value);\n    setNumRosterValue(event.target.value);\n    setMinNum(event.target.value);\n  }\n\n\n  function handleRosterChange(event) {\n    setNumRosterValue(event.target.value);\n  }\n\n\n  function createGroupNums() {\n    let tempGroupNums = [];\n    for (let i = 2; i < 9; i++)\n      tempGroupNums.push(i);\n\n    return tempGroupNums;\n  }\n\n\n  function createRosterNums() {\n    let tempRosterNums = [];\n    for (let i = 2; i < 31; i++)\n      tempRosterNums.push(i);\n\n    return tempRosterNums;\n  }\n\n\n  function toggleModal() {\n    setIsOpen(!isOpen);\n  }\n\n\n  useEffect(() => {\n    let tempRosterNums = [];\n\n    for (let i = minNum; i < 31; i++) {\n      tempRosterNums.push(i);\n    }\n\n    setRosterNumArray(tempRosterNums);\n  }, [minNum]);\n\n  function handleOnclick() {\n    props.handleBtnSubmit(numGroupsValue, numRosterValue);\n    setIsOpen(!isOpen);\n  }\n\n\n  return(\n  <Modal\n    isOpen={isOpen}\n    onRequestClose={toggleModal}\n    contentLabel=\"My dialog\"\n    className=\"mymodal\"\n    overlayClassName=\"myoverlay\"\n    closeTimeoutMS={250}\n    shouldCloseOnOverlayClick={false}\n    >\n    <div className=\"numberOfGroupsParent\">\n      <h4 className=\"numberOfGroupsLabel\">Number Of Groups: </h4>\n      <select value={numGroupsValue} onChange={handleGroupChange}>\n        {groupNumArray.map(num => {\n          return(\n            <option key={nanoid()} value={num}>{num}</option>\n          )\n        })}\n      </select>\n    </div>\n    <div className=\"numberOfRosterParent\">\n      <h4 className=\"numberOfGroupsLabel\">Number Of Prople: </h4>\n      <select value={numRosterValue} onChange={handleRosterChange}>\n      {rosterNumArray.map(num => {\n        return(\n          <option key={nanoid()} value={num}>{num}</option>\n        )\n      })}\n      </select>\n\n    </div>\n    <button className=\"modalSubmit-btn\" onClick={handleOnclick}>Go</button>\n\n  </Modal>\n  );\n}\n\nexport default SetupModal;\n","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js",[],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupCard/GroupCard.js",["89"],"import e from 'cors';\nimport React, { useState } from 'react';\nimport './GroupCard.css';\n\n\nfunction GroupCard(props) {\n    const [showTitle, setShowTitle] = useState(true);\n    const [title, setTitle] = useState(props.title);\n\n    const handleChange = e => {\n        // console.log(e.target.value);\n        setTitle(e.target.value);\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        toggleTitle();\n        props.updateGroupTitle(title, props.index);\n    }\n\n    const handleKeypress = e => {\n        //it triggers by pressing the enter key\n        if (e.keyCode === 13) {\n        handleSubmit(e, props.index);\n        }\n    };\n    \n    const toggleTitle = () => {\n        if (showTitle) {\n            // console.log(\"T -> F\");\n            setShowTitle(false);\n        } else {\n            // console.log(\"F -> T\");\n            setShowTitle(true);\n        };\n    }\n\n\n    return(\n        <div className=\"group-container\">\n            { showTitle ?\n                <div className=\"group-title\" onClick={toggleTitle}>{title}</div>\n                :\n                <form className=\"group-input--wrapper\" >\n                    <label>\n                        <input \n                            id=\"group-title--input\" \n                            type=\"text\" \n                            name=\"name\" \n                            placeholder={title} \n                            onChange={handleChange} \n                            onKeyPress={handleKeypress} \n                            value={title} \n                            autoFocus\n                        />\n                    </label>\n                    <input className=\"group-title-submit-button\" onClick={handleSubmit} type=\"submit\" value=\"✓\" />\n                    {/* <input className=\"title-submit-button\" onClick={toggleTitle} type=\"submit\" value=\"✓\" /> */}\n                </form>\n            }\n\n            <button className=\"group-del-btn\" onClick={props.deleteGroup} value={props.index}>x</button>\n\n        \n        <div className=\"group-items--display\">\n            {/* Render Groups for ResultPage */}\n            {/* <ResultItem entry={entries[0]} /> */}\n            {/* {this.state.entries.map((entry) => \n                <GroupListItem entry={entry} />\n                // <GroupListItem>{entry}</GroupListItem>\n            )} */}\n        </div>\n        {/* <div className=\"group-del-btn2\">x</div> */}\n    </div>\n    );\n}\n\nexport default GroupCard;","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/utils/groupClass.js",[],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/App.js",[],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/TitleBar/TitleBar.js",[],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/utils/queries.js",[],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/ResultPage.js",["90"],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":26},{"ruleId":"95","severity":1,"message":"96","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":26},{"ruleId":"95","severity":1,"message":"99","line":1,"column":20,"nodeType":"97","messageId":"98","endLine":1,"endColumn":29},{"ruleId":"95","severity":1,"message":"100","line":38,"column":12,"nodeType":"97","messageId":"98","endLine":38,"endColumn":27},{"ruleId":"95","severity":1,"message":"99","line":1,"column":27,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"101","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":16},{"ruleId":"95","severity":1,"message":"102","line":8,"column":17,"nodeType":"97","messageId":"98","endLine":8,"endColumn":25},{"ruleId":"95","severity":1,"message":"99","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":26},{"ruleId":"95","severity":1,"message":"103","line":1,"column":28,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"91","replacedBy":"104"},{"ruleId":"93","replacedBy":"105"},{"ruleId":"95","severity":1,"message":"106","line":13,"column":25,"nodeType":"97","messageId":"98","endLine":13,"endColumn":41},{"ruleId":"95","severity":1,"message":"107","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":9},{"ruleId":"95","severity":1,"message":"108","line":39,"column":24,"nodeType":"97","messageId":"98","endLine":39,"endColumn":38},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'checkRosterSize' is defined but never used.","'nanoid' is defined but never used.","'setArray' is assigned a value but never used.","'useState' is defined but never used.",["109"],["110"],"'setGroupNumArray' is assigned a value but never used.","'e' is defined but never used.","'setGroupObject' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]