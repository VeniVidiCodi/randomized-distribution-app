[{"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/index.js":"1","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultDisplay/ResultDisplay.js":"2","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/TitleBar/TitleBar.js":"3","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultCard/ResultCard.js":"4","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/Footer/Footer.js":"5","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js":"6","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupSection/GroupSection.js":"7","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterSection/RosterSection.js":"8","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/App.js":"9","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/utils/groupClass.js":"10","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/ResultPage.js":"11","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/NewGroupButton/NewGroupButton.js":"12","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/Nav/Nav.js":"13","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultsTitle/ResultsTitle.js":"14","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/utils/queries.js":"15","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/LandingPage.js":"16","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/FooterButton/FooterButton.js":"17","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupCard/GroupCard.js":"18","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/NewItemButton/NewItemButton.js":"19","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/ModalInput/ModalInput.js":"20"},{"size":199,"mtime":1613524547696,"results":"21","hashOfConfig":"22"},{"size":1093,"mtime":1624490572421,"results":"23","hashOfConfig":"22"},{"size":1151,"mtime":1624490572423,"results":"24","hashOfConfig":"22"},{"size":811,"mtime":1620869345460,"results":"25","hashOfConfig":"22"},{"size":1294,"mtime":1624593038342,"results":"26","hashOfConfig":"22"},{"size":7259,"mtime":1625010142718,"results":"27","hashOfConfig":"22"},{"size":1369,"mtime":1624490572421,"results":"28","hashOfConfig":"22"},{"size":2944,"mtime":1624490572422,"results":"29","hashOfConfig":"22"},{"size":1077,"mtime":1624490572419,"results":"30","hashOfConfig":"22"},{"size":1519,"mtime":1620871686448,"results":"31","hashOfConfig":"22"},{"size":6081,"mtime":1624593399396,"results":"32","hashOfConfig":"22"},{"size":267,"mtime":1619494625355,"results":"33","hashOfConfig":"22"},{"size":570,"mtime":1619494625355,"results":"34","hashOfConfig":"22"},{"size":616,"mtime":1624568236818,"results":"35","hashOfConfig":"22"},{"size":1194,"mtime":1624575404269,"results":"36","hashOfConfig":"22"},{"size":2757,"mtime":1624490837414,"results":"37","hashOfConfig":"22"},{"size":279,"mtime":1620869345459,"results":"38","hashOfConfig":"22"},{"size":2634,"mtime":1624490572421,"results":"39","hashOfConfig":"22"},{"size":388,"mtime":1613521801340,"results":"40","hashOfConfig":"22"},{"size":2566,"mtime":1625014377268,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1c826kz",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/index.js",[],["93","94"],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultDisplay/ResultDisplay.js",["95"],"import React, { Component } from 'react';\n// import ResultItem from '../ResultItem/ResultItem';\nimport ResultCard from '../ResultCard/ResultCard.js';\nimport './ResultDisplay.css';\nimport { nanoid } from 'nanoid';\n\nexport default function ResultDisplay (props) {\n//   console.log(props.groupObject);\n\n  return (\n      <div className=\"results-section\">\n\n          <header className=\"results-section-header\">\n              <div className=\"results-header-caption\">Groups</div>\n          </header>\n\n          <div className=\"results-items-container\">\n                  {/* {this.state.aGroupObject.getGroupNames().map((group, index) => */}\n                  {props.groupObject.groupNames.map((group, index) =>\n                      <ResultCard\n                          key={nanoid()}\n                          title={group.name}\n                          groupNumber={index}\n                          persons={props.groupObject.persons} \n                          // persons={this.state.aGroupObject.persons} \n                      />\n                  )}\n          </div>\n\n      </div>\n      );\n}","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/TitleBar/TitleBar.js",[],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultCard/ResultCard.js",[],["96","97"],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/Footer/Footer.js",[],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js",[],["98","99"],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupSection/GroupSection.js",["100","101"],"import React, { useEffect, useState } from 'react';\nimport './GroupSection.css';\nimport NewGroupButton from '../NewGroupButton/NewGroupButton';\nimport GroupCard from '../GroupCard/GroupCard';\nimport { nanoid } from 'nanoid';\n\n\nfunction GroupSection (props) {\n    const max = 8;\n\n    // useEffect(() => {\n    //     console.log(\"GROUP SECTION mounted\");\n    // })\n    \n    return (\n        <div className=\"group-section\">\n\n            <header className=\"group-section-header\">\n                <div className=\"group-header-caption\">Groups</div>\n                {props.groupNames.length < max ? \n                        <NewGroupButton onClick={props.addGroup} /> \n                        : <div></div>\n                }\n            </header>\n\n            <div className=\"group-items-container\">\n                <div id=\"groups-display-wrapper\">\n                    {props.groupNames.map((group, index) => \n                        <GroupCard \n                            key={nanoid()} \n                            title={group.name}\n                            index={index}\n                            updateGroupTitle={props.updateGroupTitle}\n                            deleteGroup={props.deleteGroup} \n                        />\n                    )}\n                </div>\n            </div>   \n                \n        </div>\n    );\n}\n\nexport default GroupSection;","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterSection/RosterSection.js",["102","103"],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/App.js",[],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/utils/groupClass.js",[],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/ResultPage.js",["104"],"\nimport React, { useState } from 'react';\nimport Nav from '../Nav/Nav';\nimport ResultDisplay from '../ResultDisplay/ResultDisplay';\nimport Footer from '../Footer/Footer';\nimport ResultsTitle from '../ResultsTitle/ResultsTitle';\nimport { Group } from '../../utils/groupClass.js';  //watch out for utils. keep for merge\nimport { Redirect } from 'react-router-dom';\nimport { postRequest } from \"../../utils/queries.js\";\n\nimport \"./ModalPassword.css\";\n\nimport Modal from \"react-modal\";\nModal.setAppElement(\"#root\");\n\n\nfunction ResultsPage(props) {\n\n  let GroupObject = new Group();\n\n  if (props.location.fromLandingPage) {\n    GroupObject = () => {\n       let tempGroup = new Group();\n       tempGroup.persons = props.location.json.persons;\n       tempGroup.groupNames = props.location.json.groupNames;\n       tempGroup.setProjectName(props.location.json.projectName);\n\n       return tempGroup;\n     }\n   } else {\n     GroupObject = props.location.GroupObject;\n   }\n\n\n  // –––––––\n  //  State\n  // –––––––\n\n  const [aGroupObject, setGroupObject] = useState(GroupObject);\n  // const [fromLandingPage, setFromLandingPage] = useState(props.location.fromLandingPage);\n  // const [fromInputPage, setFromInputPage] = useState(props.location.fromInputPage);\n  const [aJson, setAjson] = useState(props.location.json);\n  const [editButtonClicked, setEditButtonClicked] = useState(false);\n  const [saveButtonClicked, setSaveButtonClicked] = useState(false);\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Check console to see from which page is being received\n  // console.log(\"FROM LANDING:\", fromLandingPage);\n  // console.log(\"FROM INPUT:\", fromInputPage);\n\n\n  // ––––––––\n  // Behavior\n  // ––––––––\n\n  async function handleOnClickSave() {\n    console.log(\"SAVE BUTTON CLICKED...\");\n    //save to db by using utility component\n\n    const groups = new Group();\n\n    // groups.setProjectName(\"Project Safari\");\n    // groups.addPerson(new Person(\"Lion\", 1));\n    // groups.addPerson(new Person(\"Elephant\", 2));\n    // groups.addGroupNames(new GroupName(\"Section Danger\"));\n    // groups.addGroupNames(new GroupName(\"Section Safe\"));\n    groups.setProjectName(aGroupObject.projectName);\n    groups.persons = aGroupObject.persons;\n    groups.groupNames = aGroupObject.groupNames;\n    var myJSON = JSON.stringify(groups);  //aGroupObject\n\n    console.log(JSON.stringify(JSON.parse(myJSON), null, 2));\n\n    // let json = postRequest(myJSON).then(result => {\n    //   console.log(result);\n    //   return result;\n    // });\n    await call(myJSON);\n\n    setSaveButtonClicked(!saveButtonClicked);\n  }\n\n  async function call(myJSON) {\n     const json = await postRequest(myJSON);  //call the API to get the user data\n      if(json !== null) {\n        console.log(json);\n\n        setAjson(json);\n      } else {\n        console.log(\"No Project returned; Object:null\");\n      }\n  }\n\n  //when the edit button is clicked, setEditButtonClicked is set to true which triggers the conditional below function.\n  function handleOnClickEdit(){\n    if(saveButtonClicked)\n      toggleModal();\n    else if (props.location.fromInputPage)\n      setEditButtonClicked(true);\n    else\n      toggleModal();\n\n  }\n\n  function toggleModal() {\n    setIsOpen(!isOpen);\n  }\n\n\n  //–––––––––\n  //–– Modal\n  //–––––––––\n  const [password, setPassword] = useState(\"\");\n\n  function handleChange(event) {\n    const tempPassword = event.target.value;\n    setPassword(tempPassword);\n    event.preventDefault();\n  }\n\n  function handleSubmit(event) {\n    if (password === aJson.accessPassword)\n      setEditButtonClicked(true);\n    event.preventDefault();\n  }\n\n\n\n  // Checks and sends correct state data type to input page\n  if (editButtonClicked){\n    if (props.location.fromLandingPage) {\n      return <Redirect to={{pathname: '/grouper', json: aJson, fromResultPage: true, fromLandingPage: false, fromInputPage: false}}/>;\n    } else {\n      return <Redirect to={{pathname: '/grouper', GroupObject: aGroupObject, fromResultPage: true, fromLandingPage: false, fromInputPage: false}}/>;\n    }\n  }\n\n  function displayModal() {\n    return(\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={toggleModal}\n      contentLabel=\"My dialog\"\n      className=\"mymodal\"\n      overlayClassName=\"myoverlay\"\n      closeTimeoutMS={250}\n      shouldCloseOnOverlayClick={false}\n      >\n      <div className=\"projectIDText\">Project ID: {aJson.uniqueID}</div>\n      <div className=\"inputPasswordField\">\n        <form onSubmit={handleSubmit}>\n          <input\n            value={password}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"AccessID\"\n            placeholder=\"Enter Passcode\"\n            className=\"textField\"\n            maxLength=\"7\" />\n          <button type=\"submit\" name=\"getResultsPage\" className=\"submit\">GO</button>\n        </form>\n      </div>\n      <button className=\"closeButton\" onClick={toggleModal}>Close</button>\n    </Modal>\n    );\n  }\n\n  function resultsTitle() {\n    if (props.location.fromLandingPage || saveButtonClicked) {\n      return(\n        <ResultsTitle title={aGroupObject.projectName} accessID={aJson.uniqueID} useJson={true}/>\n      )\n    }\n    else {\n      return(\n        <ResultsTitle title={aGroupObject.projectName} useJson={false}/>\n      )\n    }\n  }\n\n\n  return (\n      <div className=\"page-wrapper\">\n        <header>\n          <Nav />\n          {resultsTitle()}\n        </header>\n        <main id=\"entry-container\">\n          <ResultDisplay groupObject={aGroupObject}/>\n        </main>\n          <Footer\n            // value=\"Save\"\n            fromInputPage={props.location.fromInputPage}  /* need fromLandingPage boolean */\n            fromLandingPage={props.location.fromLandingPage}\n            saveButtonClicked={saveButtonClicked}\n            onClickEdit={handleOnClickEdit}\n            onClickSave={handleOnClickSave}/>\n          {(props.location.fromLandingPage || saveButtonClicked) ? displayModal() : null}\n\n      </div>\n\n  );\n\n}\n\nexport default ResultsPage;\n",["105","106"],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/NewGroupButton/NewGroupButton.js",[],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/Nav/Nav.js",[],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/ResultsTitle/ResultsTitle.js",["107"],"import React, { Component } from 'react';\nimport './ResultsTitle.css';\n\nfunction ResultsTitle(props) {\n    return (\n            <section className=\"titlebar project-title-container\">\n                <h3>Project Name:</h3>\n                <h2 className=\"result-title-display\">{props.title}</h2>\n                {props.useJson ?\n                  <section className=\"titlebar project-title-container\">\n                  <h3>Project ID: </h3>\n                  <h2 className=\"result-title-display\">{props.accessID}</h2>\n                  </section> : \"\"}\n            </section>\n    );\n  }\n\nexport default ResultsTitle;\n","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/utils/queries.js",[],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/LandingPage.js",[],["108","109"],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/FooterButton/FooterButton.js",["110"],"import React, { Component } from 'react';\n\n\nfunction FooterButton(props) {\n\n  return (\n      <div className=\"\">\n        <div className=\"footer-button\" type=\"submit\" value={props.value} onClick={props.onClick}>{props.text}</div>\n      </div>\n\n  );\n}\n\nexport default FooterButton;\n","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupCard/GroupCard.js",["111"],"import e from 'cors';\nimport React, { useState } from 'react';\nimport './GroupCard.css';\n\n\nfunction GroupCard(props) {\n    const [showTitle, setShowTitle] = useState(true);\n    const [title, setTitle] = useState(props.title);\n\n    const handleChange = e => {\n        // console.log(e.target.value);\n        setTitle(e.target.value);\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        toggleTitle();\n        props.updateGroupTitle(title, props.index);\n    }\n\n    const handleKeypress = e => {\n        //it triggers by pressing the enter key\n        if (e.keyCode === 13) {\n        handleSubmit(e, props.index);\n        }\n    };\n    \n    const toggleTitle = () => {\n        if (showTitle) {\n            // console.log(\"T -> F\");\n            setShowTitle(false);\n        } else {\n            // console.log(\"F -> T\");\n            setShowTitle(true);\n        };\n    }\n\n\n    return(\n        <div className=\"group-container\">\n            <div className=\"group-card--header\">\n                { showTitle ?\n                    <div className=\"group-title\" onClick={toggleTitle}>{title}</div>\n                    :\n                    <form className=\"input-wrapper\" >\n                        <label>\n                            <input \n                                id=\"project-title--input\" \n                                type=\"text\" \n                                name=\"name\" \n                                placeholder={title} \n                                onChange={handleChange} \n                                onKeyPress={handleKeypress} \n                                value={title} \n                                autoFocus\n                            />\n                        </label>\n                        <input className=\"title-submit-button\" onClick={handleSubmit} type=\"submit\" value=\"✓\" />\n                        {/* <input className=\"title-submit-button\" onClick={toggleTitle} type=\"submit\" value=\"✓\" /> */}\n                    </form>\n                }\n\n                <button className=\"group-del-btn\" onClick={props.deleteGroup} value={props.index}>x</button>\n            </div>\n            \n            <div className=\"group-items--display\">\n                {/* Render Groups for ResultPage */}\n                {/* <ResultItem entry={entries[0]} /> */}\n                {/* {this.state.entries.map((entry) => \n                    <GroupListItem entry={entry} />\n                    // <GroupListItem>{entry}</GroupListItem>\n                )} */}\n            </div>\n            {/* <div className=\"group-del-btn2\">x</div> */}\n        </div>\n    );\n}\n\nexport default GroupCard;","/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/NewItemButton/NewItemButton.js",[],"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/ModalInput/ModalInput.js",["112"],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"113","replacedBy":"121"},{"ruleId":"115","replacedBy":"122"},{"ruleId":"113","replacedBy":"123"},{"ruleId":"115","replacedBy":"124"},{"ruleId":"117","severity":1,"message":"125","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"126","line":1,"column":28,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"125","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"126","line":1,"column":28,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"127","line":39,"column":24,"nodeType":"119","messageId":"120","endLine":39,"endColumn":38},{"ruleId":"113","replacedBy":"128"},{"ruleId":"115","replacedBy":"129"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"113","replacedBy":"130"},{"ruleId":"115","replacedBy":"131"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"132","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":9},{"ruleId":"117","severity":1,"message":"133","line":13,"column":25,"nodeType":"119","messageId":"120","endLine":13,"endColumn":41},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar",["134"],["135"],["134"],["135"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'setGroupObject' is assigned a value but never used.",["134"],["135"],["134"],["135"],"'e' is defined but never used.","'setGroupNumArray' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]