{"ast":null,"code":"var _jsxFileName = \"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupSection/GroupSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './GroupSection.css';\nimport NewGroupButton from '../NewGroupButton/NewGroupButton';\nimport GroupCard from '../GroupCard/GroupCard';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GroupSection(props) {\n  _s();\n\n  console.log(props);\n  const max = 8;\n  let [agroupNames, setAGroupNames] = useState(props.groupNames, props.setGroupNames);\n  console.log(agroupNames); // const min = 2;\n  // let [groupTitle, setGroupTitle] = useState('');\n  // let handleGroupChange = (event) => {\n  //     console.log('workkk');\n  // }\n  // useEffect(() => {\n  //     console.log('GroupSection useEffect...');\n  // }, groupTitle)\n\n  let createNewGroup = () => {\n    console.log(\"creating new group...\");\n    let length = props.groupNames.length;\n    console.log(\"groups length:\", length);\n    let group = {\n      name: \"Group \" + (length + 1)\n    };\n    console.log(group);\n    return group;\n  };\n\n  let addGroup = () => {\n    console.log(\"addGroup clicked...\");\n    let tempGroupNames = props.groupNames;\n    console.log(tempGroupNames);\n    let newGroup = createNewGroup();\n    tempGroupNames.push(newGroup);\n    console.log(tempGroupNames);\n    props.setGroupNames(tempGroupNames);\n  }; // console.log(this.state.GroupObject);\n  // let submitTitle = () => {\n  //     console.log('Submitting GroupCard Title...');\n  //  }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"group-section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-header-caption\",\n        children: \"Groups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), props.groupNames.length < max ? /*#__PURE__*/_jsxDEV(NewGroupButton, {\n        onClick: addGroup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-items-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"groups-display-wrapper\",\n        children: props.groupNames.map((group, index) => /*#__PURE__*/_jsxDEV(GroupCard, {\n          title: group // submitTitle={submitTitle}\n          // handleChange={handleChange}\n          // delete={(index) => console.log(index)} \n\n        }, nanoid(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GroupSection, \"MAUluWTTwo09gUEJ09RdIVH6/Ls=\");\n\n_c = GroupSection;\nexport default GroupSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupSection\");","map":{"version":3,"sources":["/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupSection/GroupSection.js"],"names":["React","useEffect","useState","NewGroupButton","GroupCard","nanoid","GroupSection","props","console","log","max","agroupNames","setAGroupNames","groupNames","setGroupNames","createNewGroup","length","group","name","addGroup","tempGroupNames","newGroup","push","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,oBAAP;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAGA,SAASC,YAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,GAAG,GAAG,CAAZ;AACA,MAAI,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAACK,KAAK,CAACM,UAAP,EAAmBN,KAAK,CAACO,aAAzB,CAA5C;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ,EAJ0B,CAM1B;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAII,cAAc,GAAG,MAAM;AACvBP,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAEA,QAAIO,MAAM,GAAGT,KAAK,CAACM,UAAN,CAAiBG,MAA9B;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,MAA9B;AACA,QAAIC,KAAK,GAAG;AAACC,MAAAA,IAAI,EAAE,YAAYF,MAAM,GAAG,CAArB;AAAP,KAAZ;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACA,WAAOA,KAAP;AACH,GARD;;AAUA,MAAIE,QAAQ,GAAG,MAAM;AACjBX,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAEA,QAAIW,cAAc,GAAGb,KAAK,CAACM,UAA3B;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYW,cAAZ;AACA,QAAIC,QAAQ,GAAGN,cAAc,EAA7B;AAEAK,IAAAA,cAAc,CAACE,IAAf,CAAoBD,QAApB;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYW,cAAZ;AAEAb,IAAAA,KAAK,CAACO,aAAN,CAAoBM,cAApB;AACH,GAXD,CA5B0B,CAyC1B;AAEA;AACA;AACA;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BAEI;AAAQ,MAAA,SAAS,EAAC,sBAAlB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKb,KAAK,CAACM,UAAN,CAAiBG,MAAjB,GAA0BN,GAA1B,gBACO,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAES;AAAzB;AAAA;AAAA;AAAA;AAAA,cADP,gBAES;AAAA;AAAA;AAAA;AAAA,cAJd;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACI;AAAK,QAAA,EAAE,EAAC,wBAAR;AAAA,kBACKZ,KAAK,CAACM,UAAN,CAAiBU,GAAjB,CAAqB,CAACN,KAAD,EAAQO,KAAR,kBAClB,QAAC,SAAD;AAEI,UAAA,KAAK,EAAEP,KAFX,CAGI;AACA;AACA;;AALJ,WACSZ,MAAM,EADf;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GA1EQC,Y;;KAAAA,Y;AA4ET,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './GroupSection.css';\nimport NewGroupButton from '../NewGroupButton/NewGroupButton';\nimport GroupCard from '../GroupCard/GroupCard';\nimport { nanoid } from 'nanoid';\n\n\nfunction GroupSection (props) {\n    console.log(props);\n    const max = 8;\n    let [agroupNames, setAGroupNames] = useState(props.groupNames, props.setGroupNames);\n    console.log(agroupNames);\n\n    // const min = 2;\n\n    // let [groupTitle, setGroupTitle] = useState('');\n\n    // let handleGroupChange = (event) => {\n    //     console.log('workkk');\n    // }\n\n    // useEffect(() => {\n    //     console.log('GroupSection useEffect...');\n    // }, groupTitle)\n\n    let createNewGroup = () => { \n        console.log(\"creating new group...\");\n\n        let length = props.groupNames.length;\n        console.log(\"groups length:\", length);\n        let group = {name: \"Group \" + (length + 1)};\n        console.log(group);\n        return group;\n    }\n\n    let addGroup = () => {\n        console.log(\"addGroup clicked...\");\n\n        let tempGroupNames = props.groupNames;\n        console.log(tempGroupNames);\n        let newGroup = createNewGroup();\n\n        tempGroupNames.push(newGroup);\n        console.log(tempGroupNames);\n\n        props.setGroupNames(tempGroupNames);\n    }\n\n    // console.log(this.state.GroupObject);\n\n    // let submitTitle = () => {\n    //     console.log('Submitting GroupCard Title...');\n    //  }\n\n    return (\n        <div className=\"group-section\">\n\n            <header className=\"group-section-header\">\n                <div className=\"group-header-caption\">Groups</div>\n                {props.groupNames.length < max ? \n                        <NewGroupButton onClick={addGroup} /> \n                        : <div></div>\n                }\n            </header>\n\n            <div className=\"group-items-container\">\n                <div id=\"groups-display-wrapper\">\n                    {props.groupNames.map((group, index) => \n                        <GroupCard \n                            key={nanoid()} \n                            title={group}\n                            // submitTitle={submitTitle}\n                            // handleChange={handleChange}\n                            // delete={(index) => console.log(index)} \n                        />\n                    )}\n                </div>\n            </div>   \n                \n        </div>\n    );\n}\n\nexport default GroupSection;"]},"metadata":{},"sourceType":"module"}