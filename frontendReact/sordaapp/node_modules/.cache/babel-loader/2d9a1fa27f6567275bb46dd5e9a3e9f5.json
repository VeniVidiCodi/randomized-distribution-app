{"ast":null,"code":"class Group {\n  constructor() {\n    this.projectName = \"\";\n    this.groupNames = [];\n    this.persons = [];\n  }\n\n  getProjectName() {\n    return this.projectName;\n  }\n\n  setProjectName(projectName) {\n    this.projectName = projectName;\n  }\n\n  getGroupNames() {\n    return this.groupNames;\n  }\n\n  addGroupNames(groupNames) {\n    this.groupNames.push(groupNames);\n  }\n\n  removeGroupNames(groupNames) {\n    this.groupNames.pop(groupNames);\n  }\n\n  getPerson() {\n    return this.persons;\n  }\n\n  addPerson(person) {\n    this.persons.push(person);\n  }\n\n  removePerson(person) {\n    this.persons.pop(person);\n  }\n\n}\n\nclass Person {\n  constructor(name, groupNum) {\n    this.name = name;\n    this.groupNum = groupNum;\n  }\n\n}\n\nexport { Group, Person }; //Testing the class to check if the class works correctly\n//and how to stringify the Object\n\n/*\nconst groups = new Group();\n\ngroups.setProjectName(\"Grouper\");\ngroups.addPerson(new Person(\"Kenly\", 1));\ngroups.addPerson(new Person(\"Victor\", 2));\ngroups.addGroupNames(\"Group1\");\ngroups.addGroupNames(\"Group2\");\n//console.log(groups.getProjectName());\n//console.log(groups.getGroupNames());\n//console.log(groups.getPerson());\n\nconst tempGroup = groups.getPerson();\nconst index = tempGroup.findIndex( ({name}) => name === \"Victor\" );\nconsole.log(index);\ngroups.removePerson(index);\n\nvar myJSON = JSON.stringify(groups);\n\n//console.log(myJSON);\nconsole.log(JSON.stringify(JSON.parse(myJSON), null, 2));\n*/","map":{"version":3,"sources":["/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/groupClass.js"],"names":["Group","constructor","projectName","groupNames","persons","getProjectName","setProjectName","getGroupNames","addGroupNames","push","removeGroupNames","pop","getPerson","addPerson","person","removePerson","Person","name","groupNum"],"mappings":"AAAA,MAAMA,KAAN,CAAY;AACVC,EAAAA,WAAW,GAAG;AACZ,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,OAAL,GAAe,EAAf;AACD;;AAEDC,EAAAA,cAAc,GAAG;AACf,WAAO,KAAKH,WAAZ;AACD;;AAEDI,EAAAA,cAAc,CAACJ,WAAD,EAAc;AAC1B,SAAKA,WAAL,GAAmBA,WAAnB;AACD;;AAEDK,EAAAA,aAAa,GAAG;AACd,WAAO,KAAKJ,UAAZ;AACD;;AAEDK,EAAAA,aAAa,CAACL,UAAD,EAAa;AACxB,SAAKA,UAAL,CAAgBM,IAAhB,CAAqBN,UAArB;AACD;;AAEDO,EAAAA,gBAAgB,CAACP,UAAD,EAAa;AAC3B,SAAKA,UAAL,CAAgBQ,GAAhB,CAAoBR,UAApB;AACD;;AAEDS,EAAAA,SAAS,GAAG;AACV,WAAO,KAAKR,OAAZ;AACD;;AAEDS,EAAAA,SAAS,CAACC,MAAD,EAAS;AAChB,SAAKV,OAAL,CAAaK,IAAb,CAAkBK,MAAlB;AACD;;AAEDC,EAAAA,YAAY,CAACD,MAAD,EAAS;AACnB,SAAKV,OAAL,CAAaO,GAAb,CAAiBG,MAAjB;AACD;;AArCS;;AAyCZ,MAAME,MAAN,CAAa;AACXf,EAAAA,WAAW,CAACgB,IAAD,EAAOC,QAAP,EAAiB;AAC1B,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACD;;AAJU;;AAQb,SAAQlB,KAAR,EAAegB,MAAf,G,CAGA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["class Group {\n  constructor() {\n    this.projectName = \"\";\n    this.groupNames = [];\n    this.persons = [];\n  }\n\n  getProjectName() {\n    return this.projectName;\n  }\n\n  setProjectName(projectName) {\n    this.projectName = projectName;\n  }\n\n  getGroupNames() {\n    return this.groupNames;\n  }\n\n  addGroupNames(groupNames) {\n    this.groupNames.push(groupNames);\n  }\n\n  removeGroupNames(groupNames) {\n    this.groupNames.pop(groupNames);\n  }\n\n  getPerson() {\n    return this.persons;\n  }\n\n  addPerson(person) {\n    this.persons.push(person);\n  }\n\n  removePerson(person) {\n    this.persons.pop(person);\n  }\n}\n\n\nclass Person {\n  constructor(name, groupNum) {\n    this.name = name;\n    this.groupNum = groupNum;\n  }\n}\n\n\nexport {Group, Person}\n\n\n//Testing the class to check if the class works correctly\n//and how to stringify the Object\n/*\nconst groups = new Group();\n\ngroups.setProjectName(\"Grouper\");\ngroups.addPerson(new Person(\"Kenly\", 1));\ngroups.addPerson(new Person(\"Victor\", 2));\ngroups.addGroupNames(\"Group1\");\ngroups.addGroupNames(\"Group2\");\n//console.log(groups.getProjectName());\n//console.log(groups.getGroupNames());\n//console.log(groups.getPerson());\n\nconst tempGroup = groups.getPerson();\nconst index = tempGroup.findIndex( ({name}) => name === \"Victor\" );\nconsole.log(index);\ngroups.removePerson(index);\n\nvar myJSON = JSON.stringify(groups);\n\n//console.log(myJSON);\nconsole.log(JSON.stringify(JSON.parse(myJSON), null, 2));\n*/\n"]},"metadata":{},"sourceType":"module"}