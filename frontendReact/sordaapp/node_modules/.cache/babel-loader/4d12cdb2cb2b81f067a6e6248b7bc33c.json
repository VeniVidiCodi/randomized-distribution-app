{"ast":null,"code":"var _jsxFileName = \"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Nav from '../Nav/Nav';\nimport TitleBar from '../TitleBar/TitleBar';\nimport GroupSection from '../GroupSection/GroupSection';\nimport RosterSection from '../RosterSection/RosterSection';\nimport Footer from '../Footer/Footer';\nimport { Group } from '../../groupClass'; // import { Redirect } from 'react-router';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InputPage() {\n  _s();\n\n  let GroupObject = new Group();\n  const [aInput, setInput] = useState(GroupObject);\n  const [aProjectName, setAProjectName] = useState(\"My Project\");\n  console.log(\"GroupObject:\", GroupObject);\n  console.log(\"aInput:\", aInput);\n  useEffect(() => {\n    console.log(\"useEffect...\");\n    let tempInput = aInput;\n    console.log(tempInput);\n    tempInput.projectName = aProjectName;\n    setInput(tempInput);\n    console.log(aInput);\n  }, [aInput, aProjectName]); // function setGroupFromCall(json){\n  //     let tempGroup = aGroupObject;\n  //     tempGroup.person = json.persons;\n  //     tempGroup.groupNames = json.groupNames;\n  //     tempGroup.projectName = json.projectName;\n  //     setGroupObject(tempGroup);\n  //     console.log(aGroupObject);\n  //   }\n\n  let shuffleData = () => {\n    console.log(\"shuffle clicked...\");\n    console.log(\"aInput:\", aInput); // Shuffle Roster Items randomly\n    // Assign each roster item a group #\n    // Save shuffle data\n    // return <Redirect push to={{ pathname: '/results', groupObject: aInput, fromInput=true }} />\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TitleBar, {\n        title: aProjectName,\n        \"setTitle-\": setAProjectName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"entry-container\",\n      children: [/*#__PURE__*/_jsxDEV(GroupSection, {\n        GroupObject: aInput // addGroup={this.state.GroupObject.addGroupNames} \n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RosterSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      GroupObject: {\n        aInput\n      },\n      value: \"Shuffle\",\n      text: \"Shuffle\",\n      onClick: shuffleData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InputPage, \"zRjtMlH7MGbNZhq4P4y+8MZKAvA=\");\n\n_c = InputPage;\nexport default InputPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputPage\");","map":{"version":3,"sources":["/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js"],"names":["React","useState","useEffect","Nav","TitleBar","GroupSection","RosterSection","Footer","Group","InputPage","GroupObject","aInput","setInput","aProjectName","setAProjectName","console","log","tempInput","projectName","shuffleData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CACA;;;;AAIA,SAASC,SAAT,GAAsB;AAAA;;AACpB,MAAIC,WAAW,GAAG,IAAIF,KAAJ,EAAlB;AACA,QAAM,CAACG,MAAD,EAASC,QAAT,IAAqBX,QAAQ,CAACS,WAAD,CAAnC;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,YAAD,CAAhD;AAEAc,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BN,WAA5B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,MAAvB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,QAAIC,SAAS,GAAGN,MAAhB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACAA,IAAAA,SAAS,CAACC,WAAV,GAAwBL,YAAxB;AACAD,IAAAA,QAAQ,CAACK,SAAD,CAAR;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACD,GAPQ,EAON,CAACA,MAAD,EAASE,YAAT,CAPM,CAAT,CARoB,CAiBpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIM,WAAW,GAAG,MAAM;AACtBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,MAAvB,EAFsB,CAItB;AACA;AACA;AAEA;AACD,GATD;;AAWE,sBACI;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEE,YAAjB;AAA+B,qBAAWC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAM,MAAA,EAAE,EAAC,iBAAT;AAAA,8BACE,QAAC,YAAD;AACE,QAAA,WAAW,EAAEH,MADf,CAEE;;AAFF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAaE,QAAC,MAAD;AACE,MAAA,WAAW,EAAE;AAACA,QAAAA;AAAD,OADf;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,IAAI,EAAC,SAHP;AAIE,MAAA,OAAO,EAAEQ;AAJX;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBD;;GA1DMV,S;;KAAAA,S;AA4DT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Nav from '../Nav/Nav';\nimport TitleBar from '../TitleBar/TitleBar';\nimport GroupSection from '../GroupSection/GroupSection';\nimport RosterSection from '../RosterSection/RosterSection';\nimport Footer from '../Footer/Footer';\nimport { Group } from '../../groupClass';\n// import { Redirect } from 'react-router';\n\n\n\nfunction InputPage () {\n  let GroupObject = new Group();\n  const [aInput, setInput] = useState(GroupObject);\n  const [aProjectName, setAProjectName] = useState(\"My Project\");\n  \n  console.log(\"GroupObject:\", GroupObject);\n  console.log(\"aInput:\", aInput);\n\n  useEffect(() => {\n    console.log(\"useEffect...\");\n    let tempInput = aInput;\n    console.log(tempInput);\n    tempInput.projectName = aProjectName;\n    setInput(tempInput);\n    console.log(aInput);\n  }, [aInput, aProjectName])\n    \n  // function setGroupFromCall(json){\n  //     let tempGroup = aGroupObject;\n  //     tempGroup.person = json.persons;\n  //     tempGroup.groupNames = json.groupNames;\n  //     tempGroup.projectName = json.projectName;\n  //     setGroupObject(tempGroup);\n  //     console.log(aGroupObject);\n  //   }\n\n  let shuffleData = () => {\n    console.log(\"shuffle clicked...\");\n    console.log(\"aInput:\", aInput);\n\n    // Shuffle Roster Items randomly\n    // Assign each roster item a group #\n    // Save shuffle data\n\n    // return <Redirect push to={{ pathname: '/results', groupObject: aInput, fromInput=true }} />\n  }\n\n    return (\n        <div>\n          <header className=\"App-header\">\n            <Nav />\n            <TitleBar title={aProjectName} setTitle-={setAProjectName} /> \n            \n          </header>\n          <main id=\"entry-container\">\n            <GroupSection \n              GroupObject={aInput}\n              // addGroup={this.state.GroupObject.addGroupNames} \n              />\n            <RosterSection />\n          </main>\n          <Footer \n            GroupObject={{aInput}}\n            value=\"Shuffle\" \n            text=\"Shuffle\"\n            onClick={shuffleData} />\n        </div>\n    );\n  }\n\nexport default InputPage;\n"]},"metadata":{},"sourceType":"module"}