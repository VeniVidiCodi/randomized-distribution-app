{"ast":null,"code":"var _jsxFileName = \"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Nav from '../Nav/Nav';\nimport TitleBar from '../TitleBar/TitleBar';\nimport GroupSection from '../GroupSection/GroupSection';\nimport RosterSection from '../RosterSection/RosterSection';\nimport Footer from '../Footer/Footer';\nimport { Group } from '../../groupClass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InputPage() {\n  _s();\n\n  let GroupObject = new Group();\n  const [aGroupObject, setAGroupObject] = useState(GroupObject);\n  const [aProjectName, setAProjectName] = useState(GroupObject.projectName);\n  const [aGroupNames, setAGroupNames] = useState(GroupObject.groupNames); // Emulate componentDidMount lifecycle\n\n  useEffect(() => {\n    console.log(\"use effect group state\");\n  }, [aGroupObject]);\n  useEffect(() => {\n    console.log(\"use effect group names\");\n  }, [aGroupNames]);\n  useEffect(() => {\n    console.log(\"use effect project name\");\n    let tempName = aProjectName;\n    tempName = \"My Project\";\n    setAProjectName(tempName); // console.log(\"Project:\", aProjectName);\n  }, [aProjectName]); // Title Behavior  = = = = = = = = = = = = = = = = = = = = =\n\n  let handleChange = event => {\n    console.log('Handling Change: ' + event.target.value); // this.setState({title: event.target.value});\n\n    setTempTitle(event.target.value);\n  };\n\n  let handleSubmit = event => {\n    console.log('Submitting title: ' + event.target.value); // event.preventDefault();\n\n    this.props.setTitle(tempTitle); // props.setTitle\n    // this.toggleTitle();\n  };\n\n  let toggleTitle = () => {\n    console.log(\"Toggling Title\");\n\n    if (showTitle) {\n      console.log(\"T -> F\");\n      setShowTitle(false); // this.setState({showTitle: false})\n    } else {\n      console.log(\"F -> T\");\n      setShowTitle(true); // this.setState({showTitle: true})\n    }\n\n    ;\n  }; // Group Section Behavior  = = = = = = = = = = = = = = = = = = = = =\n\n\n  let createNewGroup = () => {\n    let length = aGroupNames.length;\n    let name = \"Group\" + (length + 1);\n    console.log(name);\n    return name;\n  };\n\n  let addGroup = () => {\n    console.log(\"addGroup clicked...\");\n    let tempGroupObject = aGroupObject; // let tempGroups = aGroupObject.groupNames;\n    // console.log(tempGroups);\n\n    const newGroup = createNewGroup();\n    tempGroupObject.groupNames.push(newGroup); // tempGroups.push(newGroup);\n\n    console.log(tempGroupObject);\n    setAGroupObject(tempGroupObject);\n  };\n\n  let shuffleData = () => {\n    console.log(\"shuffle clicked...\"); // Shuffle Roster Items randomly\n    // Assign each roster item a group #\n    // Save shuffle data\n    // return <Redirect push to={{ pathname: '/results', groupObject: aProjectState, fromInput=true }} />\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TitleBar, {\n        title: aProjectName,\n        setTitle: setAProjectName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"entry-container\",\n      children: [/*#__PURE__*/_jsxDEV(GroupSection, {\n        groupNames: aGroupNames // setGroupNames={(group) => setAGroupNames(group)}\n        ,\n        addGroup: addGroup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RosterSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      GroupObject: {\n        GroupObject\n      },\n      value: \"Shuffle\",\n      text: \"Shuffle\",\n      onClick: shuffleData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InputPage, \"/FhFJBrrOyNiMDB+i4wupGmR8Uc=\");\n\n_c = InputPage;\nexport default InputPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputPage\");","map":{"version":3,"sources":["/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js"],"names":["React","useState","useEffect","Nav","TitleBar","GroupSection","RosterSection","Footer","Group","InputPage","GroupObject","aGroupObject","setAGroupObject","aProjectName","setAProjectName","projectName","aGroupNames","setAGroupNames","groupNames","console","log","tempName","handleChange","event","target","value","setTempTitle","handleSubmit","props","setTitle","tempTitle","toggleTitle","showTitle","setShowTitle","createNewGroup","length","name","addGroup","tempGroupObject","newGroup","push","shuffleData"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Nav from '../Nav/Nav';\nimport TitleBar from '../TitleBar/TitleBar';\nimport GroupSection from '../GroupSection/GroupSection';\nimport RosterSection from '../RosterSection/RosterSection';\nimport Footer from '../Footer/Footer';\nimport { Group } from '../../groupClass';\n\n\nfunction InputPage () {\n  let GroupObject = new Group();\n  const [aGroupObject, setAGroupObject] = useState(GroupObject);\n  const [aProjectName, setAProjectName] = useState(GroupObject.projectName);\n  const [aGroupNames, setAGroupNames] = useState(GroupObject.groupNames);\n\n  // Emulate componentDidMount lifecycle\n  useEffect(() => {\n    console.log(\"use effect group state\");\n  }, [aGroupObject])\n\n  useEffect(() => {\n    console.log(\"use effect group names\");\n\n  }, [aGroupNames])\n\n  useEffect(() => {\n    console.log(\"use effect project name\");\n    let tempName = aProjectName;\n    tempName = \"My Project\";\n    setAProjectName(tempName);\n    // console.log(\"Project:\", aProjectName);\n  }, [aProjectName])\n   \n\n  // Title Behavior  = = = = = = = = = = = = = = = = = = = = =\n\n  let handleChange = (event) => {\n    console.log('Handling Change: ' + event.target.value);\n    // this.setState({title: event.target.value});\n    setTempTitle(event.target.value);\n  }\n  \n  let handleSubmit = (event) => {\n    console.log('Submitting title: ' + event.target.value);\n    // event.preventDefault();\n    this.props.setTitle(tempTitle);\n    // props.setTitle\n    // this.toggleTitle();\n  }\n\n  let toggleTitle = () => {\n    console.log(\"Toggling Title\" );\n    if (showTitle) {\n        console.log(\"T -> F\");\n        setShowTitle(false);\n        // this.setState({showTitle: false})\n      } else {\n        console.log(\"F -> T\");\n        setShowTitle(true);\n        // this.setState({showTitle: true})\n      };\n  }\n\n  // Group Section Behavior  = = = = = = = = = = = = = = = = = = = = =\n\n  let createNewGroup = () => { \n    let length = aGroupNames.length;\n    let name = \"Group\" + (length + 1);\n    console.log(name);\n    return name;\n  }\n\n  let addGroup = () => {\n    console.log(\"addGroup clicked...\");\n    let tempGroupObject = aGroupObject;\n    // let tempGroups = aGroupObject.groupNames;\n    // console.log(tempGroups);\n    const newGroup = createNewGroup();\n    tempGroupObject.groupNames.push(newGroup);\n    // tempGroups.push(newGroup);\n\n    console.log(tempGroupObject);\n\n    setAGroupObject(tempGroupObject);\n  }\n\n\n  let shuffleData = () => {\n    console.log(\"shuffle clicked...\");\n    // Shuffle Roster Items randomly\n    // Assign each roster item a group #\n    // Save shuffle data\n\n    // return <Redirect push to={{ pathname: '/results', groupObject: aProjectState, fromInput=true }} />\n  }\n\n    return (\n        <div>\n          <header className=\"App-header\">\n            <Nav />\n            <TitleBar title={aProjectName} setTitle={setAProjectName} /> \n            \n          </header>\n          <main id=\"entry-container\">\n            <GroupSection \n              groupNames={aGroupNames}\n              // setGroupNames={(group) => setAGroupNames(group)}\n              addGroup={addGroup}\n              \n              />\n            <RosterSection />\n          </main>\n          <Footer \n            GroupObject={{GroupObject}}\n            value=\"Shuffle\" \n            text=\"Shuffle\"\n            onClick={shuffleData} />\n        </div>\n    );\n  }\n\nexport default InputPage;\n"]},"metadata":{},"sourceType":"module"}