{"ast":null,"code":"var _jsxFileName = \"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterSection/RosterSection.js\";\nimport React, { Component } from 'react';\nimport './RosterSection.css';\nimport RosterCard from '../RosterCard/RosterCard';\nimport NewItemButton from '../NewItemButton/NewItemButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RosterSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rosterMax: 40,\n      rosterMin: 2,\n      // OR min. should be at least the number of groups created...\n      menuRange: [],\n      showRoster: true,\n      roster: [{\n        key: '',\n        name: \"Kenly\",\n        group: 1\n      }, {\n        key: '',\n        name: \"Victor\",\n        group: 2\n      }]\n    };\n    this.renderSelectMenu = this.renderSelectMenu.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.generateItems = this.generateItems.bind(this);\n  } //  LIFECYCLE -------------------------------------------------\n\n\n  componentDidMount() {\n    this.renderSelectMenu();\n    this.generateKeys(this.state.roster);\n  }\n\n  generateKeys(list) {\n    console.log(\"Generating KEYS for roster items...\");\n    let roster = this.state.roster;\n\n    for (let i = 0; i < list.length; i++) {\n      // console.log(i);\n      let key = list[i * 3];\n      console.log('KEY: ' + key);\n      let obj = {\n        key: '',\n        name: '',\n        group: ''\n      };\n      obj.key = key;\n      console.log('OBJ: ' + obj);\n      roster.push(obj);\n    } // console.log(\"Roster w/keys?\" + roster);\n\n\n    this.setState({\n      roster: roster\n    });\n  } // Create the options list for dropdown select menu\n\n\n  renderSelectMenu() {\n    console.log('Make dropdown menu for roster...'); // Loop through range of min/max to populate the menuRange array\n\n    let menuRange = [];\n    let min = this.state.rosterMin;\n    let max = this.state.rosterMax;\n\n    for (let i = min; i <= max; i++) {\n      menuRange.push(i);\n    }\n\n    this.setState({\n      menuRange: menuRange\n    });\n  }\n\n  addItem() {\n    console.log('Add Roster Item...');\n  }\n\n  generateItems() {\n    console.log('Generate roster list base...');\n  }\n\n  render() {\n    console.log(this.state.roster);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roster-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"roster-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roster-header-caption \",\n          children: \"Roster/Items:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"roster\",\n          id: \"roster-select\",\n          children: this.state.menuRange.map(num => {\n            /*#__PURE__*/\n            _jsxDEV(\"option\", {\n              value: \"num\",\n              children: \"num\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roster-items-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"roster-display-wrapper\",\n          children: [this.state.roster.map(item => /*#__PURE__*/_jsxDEV(RosterCard, {\n            name: item.name\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(NewItemButton, {\n            onClick: this.addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), \" :\", /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default RosterSection;","map":{"version":3,"sources":["/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterSection/RosterSection.js"],"names":["React","Component","RosterCard","NewItemButton","RosterSection","constructor","props","state","rosterMax","rosterMin","menuRange","showRoster","roster","key","name","group","renderSelectMenu","bind","addItem","generateItems","componentDidMount","generateKeys","list","console","log","i","length","obj","push","setState","min","max","render","map","num","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './RosterSection.css';\nimport RosterCard from '../RosterCard/RosterCard';\nimport NewItemButton from '../NewItemButton/NewItemButton';\n\n\nclass RosterSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rosterMax: 40,\n            rosterMin: 2,  // OR min. should be at least the number of groups created...\n            menuRange: [],\n            showRoster: true,\n            roster: [\n                {key:'', name: \"Kenly\", group: 1},\n                {key:'', name: \"Victor\", group: 2}\n            ]\n        }\n\n        this.renderSelectMenu = this.renderSelectMenu.bind(this);\n        this.addItem = this.addItem.bind(this);\n        this.generateItems = this.generateItems.bind(this);\n    }    \n\n     //  LIFECYCLE -------------------------------------------------\n    componentDidMount() {\n        this.renderSelectMenu();\n        this.generateKeys(this.state.roster);\n    }\n\n    generateKeys(list) {\n        console.log(\"Generating KEYS for roster items...\")\n        let roster = this.state.roster;\n\n        for (let i=0; i<list.length; i++) {\n            // console.log(i);\n            let key = list[i * 3];\n            console.log('KEY: ' + key);\n            let obj = {key: '', name: '', group: ''};\n            obj.key = key;\n            console.log('OBJ: ' + obj);\n            roster.push(obj);\n        }\n        // console.log(\"Roster w/keys?\" + roster);\n        this.setState({roster: roster});\n    }\n\n\n    // Create the options list for dropdown select menu\n    renderSelectMenu() {\n        console.log('Make dropdown menu for roster...');\n        // Loop through range of min/max to populate the menuRange array\n        let menuRange = [];\n        let min = this.state.rosterMin;\n        let max = this.state.rosterMax;\n        for (let i=min; i<=max; i++) {\n            menuRange.push(i);\n        }\n        this.setState({menuRange: menuRange});\n    }\n\n    addItem() {\n        console.log('Add Roster Item...')\n    }\n\n    generateItems() {\n        console.log('Generate roster list base...');\n\n    }\n\n    \n    render() {\n        console.log(this.state.roster);\n        return (\n            <div className=\"roster-container\">\n                <header className=\"roster-nav\">\n                    <div className=\"roster-header-caption \">Roster/Items:</div>\n                    <select name=\"roster\" id=\"roster-select\">\n                        {this.state.menuRange.map(num => {\n                            <option value=\"num\">num</option>\n                        })}\n\n                    </select>\n                </header>\n\n                <div className=\"roster-items-container\">\n                    \n                    <div id=\"roster-display-wrapper\">\n                        {this.state.roster.map(item => \n                            <RosterCard \n                                key={item} \n                                name={item.name} />\n                        )}\n                        {/* {this.state.roster.length < this.state.max ?  */}\n                            <NewItemButton onClick={this.addItem} /> :\n                            <div></div>\n                        {/* } */}\n                    </div>\n                    \n                    {/* <div className=\"roster-item roster-item--display\">\n                        <div className=\"roster-item--text\">Item 1</div>\n                        <button className=\"roster-delete--button\">X</button>\n                    </div>\n                    <div className=\"roster-item roster-item--new\">\n                        <button className=\"roster-add--button\">+</button>\n                        <div className=\"roster-item--text\">Add Item</div>\n                    </div> */}\n                </div>\n            </div>\n        )\n    }\n }\nexport default RosterSection;"]},"metadata":{},"sourceType":"module"}