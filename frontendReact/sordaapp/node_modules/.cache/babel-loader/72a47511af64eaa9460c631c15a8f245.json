{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupSection/GroupSection.js\";\nimport React, { Component } from 'react';\nimport './GroupSection.css';\nimport NewGroupButton from '../NewGroupButton/NewGroupButton';\nimport GroupMenuButton from '../GroupMenuButton/GroupMenuButton';\nimport GroupCard from '../GroupCard/GroupCard';\n\nclass GroupSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      max: 8,\n      min: 2,\n      buttons: [2, 3, 4, 5, 6, 7, 8],\n      showGroupMenu: true,\n      projectName: \"Grouper\",\n      groups: [// 0: Group 1,\n        // 1: Group 2,\n      ],\n      rosterItems: [// {\"Kenly\": 1},\n        // {\"Victor\" : 2}\n      ]\n    }; // this.handleClick = this.handleClick.bind(this); EXAMPLE\n\n    this.addGroup = this.addGroup.bind(this);\n    this.generateGroups = this.generateGroups.bind(this);\n  } // FUNCTIONS -------------------------------------------------\n  // On click of 'Add Group' button, add entry to group array and create card\n\n\n  addGroup() {\n    console.log(\"Adding new group...\"); // Adds new entry in state.groups array\n\n    let index = this.state.groups.length;\n    let groupName = \"Group \" + (index + 1);\n    let groups = this.state.groups;\n    groups.push(groupName);\n    this.setState({\n      groups: groups\n    });\n  } // On click of a numbered group menu button, add entries to group array and generate cards\n\n\n  generateGroups(e) {\n    console.log(\"Generating multiple groups...\");\n    let num = e.target.innerText;\n    let groups = []; // Resets the groups array\n\n    let showGroupMenu = this.state.showGroupMenu; // When the user clicks the menu, remove or mask down the button menu\n\n    showGroupMenu = false; // Populate the groups array with chosen number of entries\n\n    for (let i = 0; i < num; i++) {\n      let groupName = \"Group \" + (i + 1);\n      let group = {\n        groupName: null\n      }; // Replace with class?\n\n      groups.push(group);\n    }\n\n    console.log(\"Groups generated\" + this.state.groups);\n    this.setState({\n      groups: groups,\n      showGroupMenu: showGroupMenu\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"group-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-header-caption\",\n          children: \"Groups/Categories:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), this.state.showGroupMenu ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-btn-container\",\n          children: this.state.buttons.map(button => /*#__PURE__*/_jsxDEV(GroupMenuButton, {\n            value: button,\n            onClick: this.generateGroups\n          }, button, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-items-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"groups-display-wrapper\",\n          children: [this.state.groups.map(group => /*#__PURE__*/_jsxDEV(GroupCard, {\n            title: group.groupName\n          }, group.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)), this.state.groups.length < 8 ? /*#__PURE__*/_jsxDEV(NewGroupButton, {\n            onClick: this.addGroup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GroupSection;","map":{"version":3,"sources":["/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupSection/GroupSection.js"],"names":["React","Component","NewGroupButton","GroupMenuButton","GroupCard","GroupSection","constructor","props","state","max","min","buttons","showGroupMenu","projectName","groups","rosterItems","addGroup","bind","generateGroups","console","log","index","length","groupName","push","setState","e","num","target","innerText","i","group","render","map","button","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './GroupSection.css';\nimport NewGroupButton from '../NewGroupButton/NewGroupButton';\nimport GroupMenuButton from '../GroupMenuButton/GroupMenuButton';\nimport GroupCard from '../GroupCard/GroupCard';\n\nclass GroupSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            max: 8,\n            min: 2,\n            buttons: [2, 3, 4, 5, 6, 7, 8],\n            showGroupMenu: true,\n            projectName: \"Grouper\",\n            groups: [\n                // 0: Group 1,\n                // 1: Group 2,\n            ], \n            rosterItems: [\n                // {\"Kenly\": 1},\n                // {\"Victor\" : 2}\n            ] \n        }\n        // this.handleClick = this.handleClick.bind(this); EXAMPLE\n        this.addGroup = this.addGroup.bind(this);\n        this.generateGroups = this.generateGroups.bind(this);\n    }    \n\n    // FUNCTIONS -------------------------------------------------\n    // On click of 'Add Group' button, add entry to group array and create card\n    addGroup() {\n        console.log(\"Adding new group...\");\n        // Adds new entry in state.groups array\n        let index  = this.state.groups.length;\n        let groupName = \"Group \" + (index + 1);\n        let groups = this.state.groups;\n        groups.push(groupName);\n        this.setState({groups: groups});\n    }\n\n    // On click of a numbered group menu button, add entries to group array and generate cards\n    generateGroups(e) {\n        console.log(\"Generating multiple groups...\");\n        let num = e.target.innerText;\n        let groups = [];    // Resets the groups array\n        let showGroupMenu = this.state.showGroupMenu;\n\n        // When the user clicks the menu, remove or mask down the button menu\n        showGroupMenu = false;\n\n        // Populate the groups array with chosen number of entries\n        for (let i=0; i<num; i++) {\n            let groupName = \"Group \" + (i + 1);\n            let group = { groupName : null}  // Replace with class?\n            groups.push(group);\n        }\n        console.log(\"Groups generated\" + this.state.groups);\n\n        this.setState({\n            groups: groups,\n            showGroupMenu: showGroupMenu\n        });\n    }\n    \n\n    render() {\n        return (\n            <div className=\"group-section\">\n\n                <header className=\"group-nav\">\n                    <div className=\"group-header-caption\">Groups/Categories:</div>\n                    {this.state.showGroupMenu ? \n                    <div className=\"group-btn-container\">\n                        {this.state.buttons.map((button) => \n                            <GroupMenuButton \n                                key={button}\n                                value={button} \n                                onClick={this.generateGroups}\n                            />\n                        )}\n\n                    </div>:\n                    <div></div>}\n                </header>\n\n                <div className=\"group-items-container\">\n                    <div id=\"groups-display-wrapper\">\n                        {this.state.groups.map((group) => \n                            <GroupCard key={group.key} title={group.groupName} />\n                        )}\n                        {this.state.groups.length < 8 ? \n                            <NewGroupButton onClick={this.addGroup} /> :\n                            <div></div>\n                        }\n                    </div>\n                </div>   \n                    \n            </div>\n        );\n    }\n}\n\nexport default GroupSection;"]},"metadata":{},"sourceType":"module"}