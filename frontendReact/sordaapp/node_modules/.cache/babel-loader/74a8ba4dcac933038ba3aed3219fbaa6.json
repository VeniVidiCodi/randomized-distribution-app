{"ast":null,"code":"var _jsxFileName = \"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupSection/GroupSection.js\";\nimport React, { Component } from 'react';\nimport './GroupSection.css';\nimport NewGroupButton from '../NewGroupButton/NewGroupButton';\nimport GroupCard from '../GroupCard/GroupCard';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class GroupSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      max: 8,\n      min: 2,\n      // menuButtons: [],\n      // showGroupMenu: true,\n      projectName: \"\",\n      groups: []\n    };\n    this.createNewGroup = this.createNewGroup.bind(this);\n    this.NewGroup = this.NewGroup.bind(this);\n    this.addGroup = this.addGroup.bind(this);\n    this.generateGroups = this.generateGroups.bind(this);\n    this.removeGroup = this.removeGroup.bind(this);\n  } //  LIFECYCLE -------------------------------------------------\n\n\n  componentDidMount() {// this.renderGroupMenuButtons();\n  } // EVENT HANDLERS -------------------------------------------------\n  // Group constructor\n\n\n  NewGroup({\n    groupName,\n    id,\n    key\n  }) {\n    this.groupName = groupName;\n    this.id = id;\n    this.key = key;\n  }\n\n  createNewGroup() {\n    console.log(\"CREATING NEW GROUP...\");\n    const groups = this.state.groups;\n    const length = groups.length;\n    const groupName = \"Group \" + (length + 1);\n    const id = length + 1;\n    const key = nanoid();\n    const group = new Group(groupName, id, key);\n    console.log('NEW GROUP:', group);\n    return group;\n  } // Add entry to state's group array\n\n\n  addGroup() {\n    console.log(\"ADDING NEW GROUP...\");\n    const groups = this.state.groups;\n    const group = this.createNewGroup;\n    groups.push(group);\n    console.log('GROUPS ARRAY:', groups);\n    this.setState({\n      groups: groups\n    });\n  } // Add multiple entries to group array\n\n\n  generateGroups(e) {\n    console.log(\"Generating multiple groups...\");\n    let qty = e.target.innerText; // let groups = this.state.groups;\n    // let showAddButton = this.state.showAddButton;\n    // showAddButton = false;\n    // Populate the groups array with chosen number of entries\n\n    for (let i = 0; i < qty; i++) {\n      this.addGroup;\n    } // this.setState({\n    //     groups: groups,\n    //     showGroupMenu: showGroupMenu\n    // });\n\n  }\n\n  removeGroup(e) {\n    console.log(\"Removing Group...\");\n    console.log(\"OBJECT:\", e); // Targeting element\n\n    const groups = this.state.groups;\n    const target = groups.indexOf(e);\n    console.log(\"TARGET:\", target);\n    groups.splice(e, 1); // Fix 'e' which is still giving a value of 0\n\n    console.log(groups);\n    this.setState({\n      groups: groups\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"group-section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-header-caption\",\n          children: \"Groups\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), this.state.groups.length < this.state.max ? /*#__PURE__*/_jsxDEV(NewGroupButton, {\n          onClick: this.addGroup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-items-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"groups-display-wrapper\",\n          children: this.state.groups.map(group => /*#__PURE__*/_jsxDEV(GroupCard, {\n            title: group.groupName,\n            id: group.id,\n            delete: this.removeGroup\n          }, group.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupSection/GroupSection.js"],"names":["React","Component","NewGroupButton","GroupCard","nanoid","GroupSection","constructor","props","state","max","min","projectName","groups","createNewGroup","bind","NewGroup","addGroup","generateGroups","removeGroup","componentDidMount","groupName","id","key","console","log","length","group","Group","push","setState","e","qty","target","innerText","i","indexOf","splice","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './GroupSection.css';\nimport NewGroupButton from '../NewGroupButton/NewGroupButton';\nimport GroupCard from '../GroupCard/GroupCard';\nimport { nanoid } from 'nanoid';\n\n\nexport default class GroupSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            max: 8,\n            min: 2,\n            // menuButtons: [],\n            // showGroupMenu: true,\n            projectName: \"\",\n            groups: []\n        }\n\n        this.createNewGroup = this.createNewGroup.bind(this);\n        this.NewGroup = this.NewGroup.bind(this);\n        this.addGroup = this.addGroup.bind(this);\n        this.generateGroups = this.generateGroups.bind(this);\n        this.removeGroup = this.removeGroup.bind(this);\n    }    \n\n    //  LIFECYCLE -------------------------------------------------\n    componentDidMount() {\n        // this.renderGroupMenuButtons();\n    }\n\n    // EVENT HANDLERS -------------------------------------------------\n\n    // Group constructor\n    NewGroup({groupName, id, key}) {\n        this.groupName = groupName;\n        this.id = id;\n        this.key = key;\n    } \n\n    createNewGroup() {\n        console.log(\"CREATING NEW GROUP...\");\n        const groups = this.state.groups;\n        const length  = groups.length;\n        const groupName = \"Group \" + (length + 1);\n        const id = length + 1;\n        const key = nanoid();\n\n        const group = new Group(groupName, id, key);\n        console.log('NEW GROUP:', group);\n        return group;\n    }\n\n    // Add entry to state's group array\n    addGroup() {\n        console.log(\"ADDING NEW GROUP...\");\n        const groups = this.state.groups;\n        const group = this.createNewGroup;\n        groups.push(group);\n        console.log('GROUPS ARRAY:', groups);\n        this.setState({groups: groups});\n    }\n\n    // Add multiple entries to group array\n    generateGroups(e) {\n        console.log(\"Generating multiple groups...\");\n        let qty = e.target.innerText;\n        // let groups = this.state.groups;\n        // let showAddButton = this.state.showAddButton;\n        // showAddButton = false;\n\n        // Populate the groups array with chosen number of entries\n        for (let i=0; i<qty; i++) {\n            this.addGroup;\n        }\n\n        // this.setState({\n        //     groups: groups,\n        //     showGroupMenu: showGroupMenu\n        // });\n    }\n\n    removeGroup(e) {\n        console.log(\"Removing Group...\");\n        console.log(\"OBJECT:\", e);\n\n        // Targeting element\n        const groups = this.state.groups;\n        const target = groups.indexOf(e)\n        console.log(\"TARGET:\", target);\n\n        groups.splice(e, 1);    // Fix 'e' which is still giving a value of 0\n        console.log(groups);\n\n        this.setState({groups: groups});\n    }\n\n    \n\n    render() {\n        return (\n            <div className=\"group-section\">\n\n                <header className=\"group-section-header\">\n                    <div className=\"group-header-caption\">Groups</div>\n                    {this.state.groups.length < this.state.max ? \n                            <NewGroupButton onClick={this.addGroup} /> \n                            : <div></div>\n                        }\n                </header>\n\n                <div className=\"group-items-container\">\n                    <div id=\"groups-display-wrapper\">\n                        {this.state.groups.map((group) => \n                            <GroupCard \n                                key={group.key} \n                                title={group.groupName}\n                                id={group.id}\n                                delete={this.removeGroup} />\n                        )}\n                    </div>\n                </div>   \n                    \n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}