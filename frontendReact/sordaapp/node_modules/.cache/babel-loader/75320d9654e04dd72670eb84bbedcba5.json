{"ast":null,"code":"var _jsxFileName = \"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Nav from '../Nav/Nav';\nimport TitleBar from '../TitleBar/TitleBar';\nimport GroupSection from '../GroupSection/GroupSection';\nimport RosterSection from '../RosterSection/RosterSection';\nimport Footer from '../Footer/Footer';\nimport { Group } from '../../groupClass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InputPage() {\n  _s();\n\n  let GroupObject = new Group();\n  const [aProjectName, setAProjectName] = useState(GroupObject.projectName);\n  const [aGroupNames, setAGroupNames] = useState(GroupObject.groupNames); // Emulate componentDidMount lifecycle\n\n  useEffect(() => {\n    let tempName = aProjectName;\n    tempName = \"My Project\";\n    setAProjectName(tempName);\n    console.log(\"Project:\", aProjectName);\n  }, [aProjectName]);\n  useEffect(() => {\n    console.log(\"setting group names\");\n  }, [aGroupNames]); // Group Section Behavior  = = = = = = = = = = = = = = = = = = = = =\n\n  let createNewGroup = () => {\n    let length = aGroupNames.length;\n    let name = \"Group\" + (length + 1);\n    console.log(name);\n    return name;\n  };\n\n  let addGroup = () => {\n    console.log(\"addGroup clicked...\");\n    let tempGroups = aGroupNames; // console.log(tempGroups);\n\n    const newGroup = createNewGroup();\n    tempGroups.push(newGroup);\n    console.log(tempGroups);\n    setAGroupNames(tempGroups);\n  };\n\n  let shuffleData = () => {\n    console.log(\"shuffle clicked...\"); // Shuffle Roster Items randomly\n    // Assign each roster item a group #\n    // Save shuffle data\n    // return <Redirect push to={{ pathname: '/results', groupObject: aProjectState, fromInput=true }} />\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TitleBar, {\n        title: aProjectName,\n        setTitle: setAProjectName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"entry-container\",\n      children: [/*#__PURE__*/_jsxDEV(GroupSection, {\n        groupNames: aGroupNames,\n        setGroupName: group => setAGroupName(group),\n        addGroup: addGroup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RosterSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      GroupObject: {\n        GroupObject\n      },\n      value: \"Shuffle\",\n      text: \"Shuffle\",\n      onClick: shuffleData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InputPage, \"soYqrmv4YRIohKRW/pTjJrdzB7g=\");\n\n_c = InputPage;\nexport default InputPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputPage\");","map":{"version":3,"sources":["/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js"],"names":["React","useState","useEffect","Nav","TitleBar","GroupSection","RosterSection","Footer","Group","InputPage","GroupObject","aProjectName","setAProjectName","projectName","aGroupNames","setAGroupNames","groupNames","tempName","console","log","createNewGroup","length","name","addGroup","tempGroups","newGroup","push","shuffleData","group","setAGroupName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Nav from '../Nav/Nav';\nimport TitleBar from '../TitleBar/TitleBar';\nimport GroupSection from '../GroupSection/GroupSection';\nimport RosterSection from '../RosterSection/RosterSection';\nimport Footer from '../Footer/Footer';\nimport { Group } from '../../groupClass';\n\n\nfunction InputPage () {\n  let GroupObject = new Group();\n  const [aProjectName, setAProjectName] = useState(GroupObject.projectName);\n  const [aGroupNames, setAGroupNames] = useState(GroupObject.groupNames);\n\n  // Emulate componentDidMount lifecycle\n  useEffect(() => {\n    let tempName = aProjectName;\n    tempName = \"My Project\";\n    setAProjectName(tempName);\n    console.log(\"Project:\", aProjectName);\n  }, [aProjectName])\n  \n  useEffect(() => {\n    console.log(\"setting group names\");\n  }, [aGroupNames])\n\n  // Group Section Behavior  = = = = = = = = = = = = = = = = = = = = =\n\n  let createNewGroup = () => { \n    let length = aGroupNames.length;\n    let name = \"Group\" + (length + 1);\n    console.log(name);\n    return name;\n  }\n\n  let addGroup = () => {\n    console.log(\"addGroup clicked...\");\n\n    let tempGroups = aGroupNames;\n    // console.log(tempGroups);\n    const newGroup = createNewGroup();\n    tempGroups.push(newGroup);\n    console.log(tempGroups);\n\n    setAGroupNames(tempGroups);\n  }\n\n\n  let shuffleData = () => {\n    console.log(\"shuffle clicked...\");\n    // Shuffle Roster Items randomly\n    // Assign each roster item a group #\n    // Save shuffle data\n\n    // return <Redirect push to={{ pathname: '/results', groupObject: aProjectState, fromInput=true }} />\n  }\n\n    return (\n        <div>\n          <header className=\"App-header\">\n            <Nav />\n            <TitleBar title={aProjectName} setTitle={setAProjectName} /> \n            \n          </header>\n          <main id=\"entry-container\">\n            <GroupSection \n              groupNames={aGroupNames}\n              setGroupName={(group) => setAGroupName(group)}\n              addGroup={addGroup}\n              \n              />\n            <RosterSection />\n          </main>\n          <Footer \n            GroupObject={{GroupObject}}\n            value=\"Shuffle\" \n            text=\"Shuffle\"\n            onClick={shuffleData} />\n        </div>\n    );\n  }\n\nexport default InputPage;\n"]},"metadata":{},"sourceType":"module"}