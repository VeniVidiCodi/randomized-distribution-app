{"ast":null,"code":"var _jsxFileName = \"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/ResultPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Nav from '../Nav/Nav';\nimport ResultDisplay from '../ResultDisplay/ResultDisplay';\nimport Footer from '../Footer/Footer';\nimport ResultsTitle from '../ResultsTitle/ResultsTitle';\nimport { Group, Person } from '../../utils/groupClass.js'; //watch out for utils. keep for merge\n\nimport { Link, Redirect } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ResultsPage(props) {\n  _s();\n\n  let GroupObject = new Group();\n\n  if (props.location.isTrue) {\n    GroupObject = () => {\n      let tempGroup = new Group();\n      tempGroup.persons = props.location.json.persons;\n      tempGroup.groupNames = props.location.json.groupNames;\n      tempGroup.setProjectName(props.location.json.projectName);\n      return tempGroup;\n    };\n  } else {\n    GroupObject = props.state.GroupObject;\n  }\n\n  const [aGroupObject, setGroupObject] = useState(GroupObject);\n  const [fromLandingPage, setFromLandinPage] = useState(props.location.isTrue);\n  const [aJson, setAjson] = useState(props.location.json);\n  const [editButtonClicked, setEditButtonClicked] = useState(false);\n\n  function handleOnClickSave() {\n    console.log(\"SAVE BUTTON CLICKED...\"); //save to db by using utility component\n  }\n\n  function handleOnClickEdit() {\n    console.log(\"EDIT BUTTON CLICKED...\");\n    setEditButtonClicked(true); //send redirect to inputPage\n\n    if (fromLandingPage) return /*#__PURE__*/_jsxDEV(Redirect, {\n      push: true,\n      to: {\n        pathname: '/grouper',\n        GroupObject: aGroupObject,\n        isTrue: fromLandingPage\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 14\n    }, this); //use in input page\n\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      push: true,\n      to: {\n        pathname: '/grouper',\n        json: aJson,\n        isTrue: !fromLandingPage\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this); //use in input page\n  }\n\n  useEffect(() => {\n    console.log(\"Edit click\");\n    if (fromLandingPage) return /*#__PURE__*/_jsxDEV(Redirect, {\n      push: true,\n      to: {\n        pathname: '/grouper',\n        GroupObject: aGroupObject,\n        isTrue: fromLandingPage\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 14\n    }, this); //use in input page\n\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      push: true,\n      to: {\n        pathname: '/grouper',\n        json: aJson,\n        isTrue: !fromLandingPage\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }, [editButtonClicked]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResultsTitle, {\n        title: aGroupObject.projectName\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"entry-container\",\n      children: /*#__PURE__*/_jsxDEV(ResultDisplay, {\n        grpObject: aGroupObject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      value: \"Save\",\n      isTrue: fromLandingPage,\n      onClickEdit: handleOnClickEdit,\n      onClickSave: handleOnClickSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ResultsPage, \"Sf8fOukCp/jZXUaWFaHWFDiyTtU=\");\n\n_c = ResultsPage;\nexport default ResultsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"sources":["/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/ResultPage.js"],"names":["React","useState","useEffect","Nav","ResultDisplay","Footer","ResultsTitle","Group","Person","Link","Redirect","nanoid","ResultsPage","props","GroupObject","location","isTrue","tempGroup","persons","json","groupNames","setProjectName","projectName","state","aGroupObject","setGroupObject","fromLandingPage","setFromLandinPage","aJson","setAjson","editButtonClicked","setEditButtonClicked","handleOnClickSave","console","log","handleOnClickEdit","pathname"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport Nav from '../Nav/Nav';\nimport ResultDisplay from '../ResultDisplay/ResultDisplay';\nimport Footer from '../Footer/Footer';\nimport ResultsTitle from '../ResultsTitle/ResultsTitle';\nimport {Group, Person} from '../../utils/groupClass.js';  //watch out for utils. keep for merge\nimport {Link, Redirect} from 'react-router-dom';\nimport { nanoid } from 'nanoid';\n\n\nfunction ResultsPage(props) {\n\n   let GroupObject = new Group();\n   if (props.location.isTrue) {\n      GroupObject = () => {\n         let tempGroup = new Group();\n         tempGroup.persons = props.location.json.persons;\n         tempGroup.groupNames = props.location.json.groupNames;\n         tempGroup.setProjectName(props.location.json.projectName);\n\n         return tempGroup;\n       }\n     } else {\n       GroupObject = props.state.GroupObject;\n     }\n\n\n   const [aGroupObject, setGroupObject] = useState(GroupObject);\n   const [fromLandingPage, setFromLandinPage] = useState(props.location.isTrue);\n   const [aJson, setAjson] = useState(props.location.json);\n   const [editButtonClicked, setEditButtonClicked] = useState(false)\n\n\n  function handleOnClickSave() {\n    console.log(\"SAVE BUTTON CLICKED...\");\n    //save to db by using utility component\n\n\n  }\n\n  function handleOnClickEdit(){\n    console.log(\"EDIT BUTTON CLICKED...\");\n    setEditButtonClicked(true);\n\n    //send redirect to inputPage\n    if (fromLandingPage)\n      return <Redirect push to={{pathname: '/grouper', GroupObject: aGroupObject, isTrue: fromLandingPage}}/>;  //use in input page\n\n    return <Redirect push to={{pathname: '/grouper', json: aJson, isTrue: !fromLandingPage}}/>;  //use in input page\n  }\n\n  useEffect(() => {\n    console.log(\"Edit click\");\n    if (fromLandingPage)\n      return <Redirect push to={{pathname: '/grouper', GroupObject: aGroupObject, isTrue: fromLandingPage}}/>;  //use in input page\n\n    return <Redirect push to={{pathname: '/grouper', json: aJson, isTrue: !fromLandingPage}}/>;\n  },[editButtonClicked])\n\n\n\n  return (\n      <div className=\"page-wrapper\">\n        <header>\n          <Nav />\n          <ResultsTitle key={nanoid()} title={aGroupObject.projectName}/>\n        </header>\n        <main id=\"entry-container\">\n          <ResultDisplay grpObject={aGroupObject}/>\n        </main>\n          <Footer\n            value=\"Save\"\n            isTrue={fromLandingPage}\n            onClickEdit={handleOnClickEdit}\n            onClickSave={handleOnClickSave}/>\n      </div>\n  );\n\n}\n\nexport default ResultsPage;\n"]},"metadata":{},"sourceType":"module"}