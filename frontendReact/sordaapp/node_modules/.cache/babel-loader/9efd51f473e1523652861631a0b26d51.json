{"ast":null,"code":"var _jsxFileName = \"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterSection/RosterSection.js\";\nimport React, { Component } from 'react';\nimport './RosterSection.css';\nimport RosterCard from '../RosterCard/RosterCard';\nimport NewItemButton from '../NewItemButton/NewItemButton';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RosterSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rosterMax: 40,\n      rosterMin: 2,\n      // OR min. should be at least the number of groups created...\n      menuRange: [],\n      showRoster: true,\n      myuuid: uuidv4(),\n      // projectName: \"Grouper\",\n      groups: [// {groupName: \"Group 1\", id: 0}\n      ],\n      roster: [{\n        name: \"Kenly\",\n        group: 1\n      }, {\n        name: \"Victor\",\n        group: 2\n      }]\n    }; // this.handleClick = this.handleClick.bind(this); EXAMPLE\n\n    this.renderSelectMenu = this.renderSelectMenu.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.generateItems = this.generateItems.bind(this);\n  } //  LIFECYCLE -------------------------------------------------\n\n\n  componentDidMount() {\n    console.log('Your UUID is: ' + this.state.myuuid);\n    this.renderSelectMenu();\n  } // Create the options list for dropdown select menu\n\n\n  renderSelectMenu() {\n    console.log('Make dropdown menu for roster...'); // Loop through range of min/max to populate the menuRange array\n\n    let menuRange = [];\n    let min = this.state.rosterMin;\n    let max = this.state.rosterMax;\n\n    for (let i = min; i <= max; i++) {\n      menuRange.push(i);\n    }\n\n    this.setState({\n      menuRange: menuRange\n    });\n  }\n\n  addItem() {\n    console.log('Add Roster Item...');\n  }\n\n  generateItems() {\n    console.log('Generate roster list base...');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roster-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"roster-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roster-header-caption \",\n          children: \"Roster/Items:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"roster\",\n          id: \"roster-select\",\n          children: this.state.menuRange.map(num => {\n            /*#__PURE__*/\n            _jsxDEV(\"option\", {\n              value: \"num\",\n              children: \"num\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roster-items-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"roster-display-wrapper\",\n          children: [this.state.roster.map(item => /*#__PURE__*/_jsxDEV(RosterCard, {\n            name: item.name\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(NewItemButton, {\n            onClick: this.addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), \" :\", /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default RosterSection;","map":{"version":3,"sources":["/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterSection/RosterSection.js"],"names":["React","Component","RosterCard","NewItemButton","v4","uuidv4","RosterSection","constructor","props","state","rosterMax","rosterMin","menuRange","showRoster","myuuid","groups","roster","name","group","renderSelectMenu","bind","addItem","generateItems","componentDidMount","console","log","min","max","i","push","setState","render","map","num","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,qBAAP;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;;;AAGA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAClCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,SAAS,EAAE,CAFF;AAEM;AACfC,MAAAA,SAAS,EAAE,EAHF;AAITC,MAAAA,UAAU,EAAE,IAJH;AAKTC,MAAAA,MAAM,EAAET,MAAM,EALL;AAOT;AACAU,MAAAA,MAAM,EAAE,CACJ;AADI,OARC;AAWTC,MAAAA,MAAM,EAAE,CACJ;AAACC,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OADI,EAEJ;AAACD,QAAAA,IAAI,EAAE,QAAP;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAFI;AAXC,KAAb,CAFe,CAkBf;;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKE,aAAL,GAAqB,KAAKA,aAAL,CAAmBF,IAAnB,CAAwB,IAAxB,CAArB;AACH,GAvBiC,CAyBjC;;;AACDG,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmB,KAAKhB,KAAL,CAAWK,MAA1C;AACA,SAAKK,gBAAL;AACH,GA7BiC,CAgClC;;;AACAA,EAAAA,gBAAgB,GAAG;AACfK,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EADe,CAEf;;AACA,QAAIb,SAAS,GAAG,EAAhB;AACA,QAAIc,GAAG,GAAG,KAAKjB,KAAL,CAAWE,SAArB;AACA,QAAIgB,GAAG,GAAG,KAAKlB,KAAL,CAAWC,SAArB;;AACA,SAAK,IAAIkB,CAAC,GAACF,GAAX,EAAgBE,CAAC,IAAED,GAAnB,EAAwBC,CAAC,EAAzB,EAA6B;AACzBhB,MAAAA,SAAS,CAACiB,IAAV,CAAeD,CAAf;AACH;;AACD,SAAKE,QAAL,CAAc;AAAClB,MAAAA,SAAS,EAAEA;AAAZ,KAAd;AACH;;AAEDS,EAAAA,OAAO,GAAG;AACNG,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH;;AAEDH,EAAAA,aAAa,GAAG;AACZE,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AAEH;;AAGDM,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,EAAE,EAAC,eAAzB;AAAA,oBACK,KAAKtB,KAAL,CAAWG,SAAX,CAAqBoB,GAArB,CAAyBC,GAAG,IAAI;AAC7B;AAAA;AAAQ,cAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,WAFA;AADL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,+BAEI;AAAK,UAAA,EAAE,EAAC,wBAAR;AAAA,qBACK,KAAKxB,KAAL,CAAWO,MAAX,CAAkBgB,GAAlB,CAAsBE,IAAI,iBACvB,QAAC,UAAD;AAEI,YAAA,IAAI,EAAEA,IAAI,CAACjB;AAFf,aACSiB,IADT;AAAA;AAAA;AAAA;AAAA,kBADH,CADL,eAOQ,QAAC,aAAD;AAAe,YAAA,OAAO,EAAE,KAAKb;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAPR,qBAQQ;AAAA;AAAA;AAAA;AAAA,kBARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqCH;;AA7FiC;;AA+FtC,eAAef,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport './RosterSection.css';\nimport RosterCard from '../RosterCard/RosterCard';\nimport NewItemButton from '../NewItemButton/NewItemButton';\nimport {v4 as uuidv4} from 'uuid';\n\n\nclass RosterSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rosterMax: 40,\n            rosterMin: 2,  // OR min. should be at least the number of groups created...\n            menuRange: [],\n            showRoster: true,\n            myuuid: uuidv4(),\n\n            // projectName: \"Grouper\",\n            groups: [\n                // {groupName: \"Group 1\", id: 0}\n            ], \n            roster: [\n                {name: \"Kenly\", group: 1},\n                {name: \"Victor\", group: 2}\n            ]\n        }\n        // this.handleClick = this.handleClick.bind(this); EXAMPLE\n        this.renderSelectMenu = this.renderSelectMenu.bind(this);\n        this.addItem = this.addItem.bind(this);\n        this.generateItems = this.generateItems.bind(this);\n    }    \n\n     //  LIFECYCLE -------------------------------------------------\n    componentDidMount() {\n        console.log('Your UUID is: ' + this.state.myuuid);\n        this.renderSelectMenu();\n    }\n\n\n    // Create the options list for dropdown select menu\n    renderSelectMenu() {\n        console.log('Make dropdown menu for roster...');\n        // Loop through range of min/max to populate the menuRange array\n        let menuRange = [];\n        let min = this.state.rosterMin;\n        let max = this.state.rosterMax;\n        for (let i=min; i<=max; i++) {\n            menuRange.push(i);\n        }\n        this.setState({menuRange: menuRange});\n    }\n\n    addItem() {\n        console.log('Add Roster Item...')\n    }\n\n    generateItems() {\n        console.log('Generate roster list base...');\n\n    }\n\n    \n    render() {\n        return (\n            <div className=\"roster-container\">\n                <header className=\"roster-nav\">\n                    <div className=\"roster-header-caption \">Roster/Items:</div>\n                    <select name=\"roster\" id=\"roster-select\">\n                        {this.state.menuRange.map(num => {\n                            <option value=\"num\">num</option>\n                        })}\n\n                    </select>\n                </header>\n\n                <div className=\"roster-items-container\">\n                    \n                    <div id=\"roster-display-wrapper\">\n                        {this.state.roster.map(item => \n                            <RosterCard \n                                key={item} \n                                name={item.name} />\n                        )}\n                        {/* {this.state.roster.length < this.state.max ?  */}\n                            <NewItemButton onClick={this.addItem} /> :\n                            <div></div>\n                        {/* } */}\n                    </div>\n                    \n                    {/* <div className=\"roster-item roster-item--display\">\n                        <div className=\"roster-item--text\">Item 1</div>\n                        <button className=\"roster-delete--button\">X</button>\n                    </div>\n                    <div className=\"roster-item roster-item--new\">\n                        <button className=\"roster-add--button\">+</button>\n                        <div className=\"roster-item--text\">Add Item</div>\n                    </div> */}\n                </div>\n            </div>\n        )\n    }\n }\nexport default RosterSection;"]},"metadata":{},"sourceType":"module"}