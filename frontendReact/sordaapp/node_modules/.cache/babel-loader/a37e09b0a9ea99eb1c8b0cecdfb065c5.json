{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/ModalInput/ModalInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid'; // Modal\n// –––––\n\nimport Modal from \"react-modal\";\nimport \"./ModalInputGroup.css\";\nModal.setAppElement(\"#root\");\n\nfunction SetupModal(props) {\n  _s();\n\n  const [groupNumArray, setGroupNumArray] = useState(() => createGroupNums());\n  const [rosterNumArray, setRosterNumArray] = useState(() => createRosterNums());\n  const [minNum, setMinNum] = useState(2);\n  const [isOpen, setIsOpen] = useState(true);\n  const [numGroupsValue, setNumGroupsValue] = useState(2);\n  const [numRosterValue, setNumRosterValue] = useState(2);\n\n  function handleGroupChange(event) {\n    setNumGroupsValue(event.target.value);\n    setNumRosterValue(event.target.value);\n    setMinNum(event.target.value);\n  }\n\n  function handleRosterChange(event) {\n    setNumRosterValue(event.target.value);\n  }\n\n  function createGroupNums() {\n    let tempGroupNums = [];\n\n    for (let i = 2; i < 9; i++) tempGroupNums.push(i);\n\n    return tempGroupNums;\n  }\n\n  function createRosterNums() {\n    let tempRosterNums = [];\n\n    for (let i = 2; i < 31; i++) tempRosterNums.push(i);\n\n    return tempRosterNums;\n  }\n\n  function toggleModal() {\n    setIsOpen(!isOpen);\n  }\n\n  useEffect(() => {\n    let tempRosterNums = [];\n\n    for (let i = minNum; i < 31; i++) {\n      tempRosterNums.push(i);\n    }\n\n    setRosterNumArray(tempRosterNums);\n  }, [minNum]);\n\n  function handleOnclick() {\n    props.handleBtnSubmit(numGroupsValue, numRosterValue);\n    setIsOpen(!isOpen);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: toggleModal,\n    contentLabel: \"My dialog\",\n    className: \"mymodal\",\n    overlayClassName: \"myoverlay\",\n    closeTimeoutMS: 250,\n    shouldCloseOnOverlayClick: false,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"numberOfGroupsParent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"numberOfGroupsLabel\",\n        children: \"Number Of Groups: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: numGroupsValue,\n        onChange: handleGroupChange,\n        children: groupNumArray.map(num => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: num,\n            children: num\n          }, nanoid(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"numberOfRosterParent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"numberOfRosterLabel\",\n        children: \"Number Of Prople: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: numRosterValue,\n        onChange: handleRosterChange,\n        children: rosterNumArray.map(num => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: num,\n            children: num\n          }, nanoid(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"modalSubmit-btn\",\n      onClick: handleOnclick,\n      children: \"Go\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SetupModal, \"RuTyT378T/SDyMRuGJr5YfrQXRY=\");\n\n_c = SetupModal;\nexport default SetupModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetupModal\");","map":{"version":3,"sources":["/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/ModalInput/ModalInput.js"],"names":["React","useState","useEffect","nanoid","Modal","setAppElement","SetupModal","props","groupNumArray","setGroupNumArray","createGroupNums","rosterNumArray","setRosterNumArray","createRosterNums","minNum","setMinNum","isOpen","setIsOpen","numGroupsValue","setNumGroupsValue","numRosterValue","setNumRosterValue","handleGroupChange","event","target","value","handleRosterChange","tempGroupNums","i","push","tempRosterNums","toggleModal","handleOnclick","handleBtnSubmit","map","num"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB,C,CACA;AACA;;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,uBAAP;AAEAA,KAAK,CAACC,aAAN,CAAoB,OAApB;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAEzB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAE,MAAMS,eAAe,EAAvB,CAAlD;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAE,MAAMY,gBAAgB,EAAxB,CAApD;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACiB,cAAD,EAAiBC,iBAAjB,IAAsClB,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACmB,cAAD,EAAiBC,iBAAjB,IAAsCpB,QAAQ,CAAC,CAAD,CAApD;;AAGA,WAASqB,iBAAT,CAA2BC,KAA3B,EAAkC;AAChCJ,IAAAA,iBAAiB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACAJ,IAAAA,iBAAiB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACAV,IAAAA,SAAS,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACD;;AAGD,WAASC,kBAAT,CAA4BH,KAA5B,EAAmC;AACjCF,IAAAA,iBAAiB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACD;;AAGD,WAASf,eAAT,GAA2B;AACzB,QAAIiB,aAAa,GAAG,EAApB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EACED,aAAa,CAACE,IAAd,CAAmBD,CAAnB;;AAEF,WAAOD,aAAP;AACD;;AAGD,WAASd,gBAAT,GAA4B;AAC1B,QAAIiB,cAAc,GAAG,EAArB;;AACA,SAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EACEE,cAAc,CAACD,IAAf,CAAoBD,CAApB;;AAEF,WAAOE,cAAP;AACD;;AAGD,WAASC,WAAT,GAAuB;AACrBd,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD;;AAGDd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4B,cAAc,GAAG,EAArB;;AAEA,SAAK,IAAIF,CAAC,GAAGd,MAAb,EAAqBc,CAAC,GAAG,EAAzB,EAA6BA,CAAC,EAA9B,EAAkC;AAChCE,MAAAA,cAAc,CAACD,IAAf,CAAoBD,CAApB;AACD;;AAEDhB,IAAAA,iBAAiB,CAACkB,cAAD,CAAjB;AACD,GARQ,EAQN,CAAChB,MAAD,CARM,CAAT;;AAUA,WAASkB,aAAT,GAAyB;AACvBzB,IAAAA,KAAK,CAAC0B,eAAN,CAAsBf,cAAtB,EAAsCE,cAAtC;AACAH,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD;;AAGD,sBACA,QAAC,KAAD;AACE,IAAA,MAAM,EAAEA,MADV;AAEE,IAAA,cAAc,EAAEe,WAFlB;AAGE,IAAA,YAAY,EAAC,WAHf;AAIE,IAAA,SAAS,EAAC,SAJZ;AAKE,IAAA,gBAAgB,EAAC,WALnB;AAME,IAAA,cAAc,EAAE,GANlB;AAOE,IAAA,yBAAyB,EAAE,KAP7B;AAAA,4BASE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,KAAK,EAAEb,cAAf;AAA+B,QAAA,QAAQ,EAAEI,iBAAzC;AAAA,kBACGd,aAAa,CAAC0B,GAAd,CAAkBC,GAAG,IAAI;AACxB,8BACE;AAAuB,YAAA,KAAK,EAAEA,GAA9B;AAAA,sBAAoCA;AAApC,aAAahC,MAAM,EAAnB;AAAA;AAAA;AAAA;AAAA,kBADF;AAGD,SAJA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAmBE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,KAAK,EAAEiB,cAAf;AAA+B,QAAA,QAAQ,EAAEM,kBAAzC;AAAA,kBACCf,cAAc,CAACuB,GAAf,CAAmBC,GAAG,IAAI;AACzB,8BACE;AAAuB,YAAA,KAAK,EAAEA,GAA9B;AAAA,sBAAoCA;AAApC,aAAahC,MAAM,EAAnB;AAAA;AAAA;AAAA;AAAA,kBADF;AAGD,SAJA;AADD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,eA8BE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE6B,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAmCD;;GAhGQ1B,U;;KAAAA,U;AAkGT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\n// Modal\n// –––––\nimport Modal from \"react-modal\";\nimport \"./ModalInputGroup.css\";\n\nModal.setAppElement(\"#root\");\n\n\nfunction SetupModal(props) {\n\n  const [groupNumArray, setGroupNumArray] = useState( () => createGroupNums() );\n  const [rosterNumArray, setRosterNumArray] = useState( () => createRosterNums() );\n  const [minNum, setMinNum] = useState(2);\n  const [isOpen, setIsOpen] = useState(true);\n  const [numGroupsValue, setNumGroupsValue] = useState(2);\n  const [numRosterValue, setNumRosterValue] = useState(2);\n\n\n  function handleGroupChange(event) {\n    setNumGroupsValue(event.target.value);\n    setNumRosterValue(event.target.value);\n    setMinNum(event.target.value);\n  }\n\n\n  function handleRosterChange(event) {\n    setNumRosterValue(event.target.value);\n  }\n\n\n  function createGroupNums() {\n    let tempGroupNums = [];\n    for (let i = 2; i < 9; i++)\n      tempGroupNums.push(i);\n\n    return tempGroupNums;\n  }\n\n\n  function createRosterNums() {\n    let tempRosterNums = [];\n    for (let i = 2; i < 31; i++)\n      tempRosterNums.push(i);\n\n    return tempRosterNums;\n  }\n\n\n  function toggleModal() {\n    setIsOpen(!isOpen);\n  }\n\n\n  useEffect(() => {\n    let tempRosterNums = [];\n\n    for (let i = minNum; i < 31; i++) {\n      tempRosterNums.push(i);\n    }\n\n    setRosterNumArray(tempRosterNums);\n  }, [minNum]);\n\n  function handleOnclick() {\n    props.handleBtnSubmit(numGroupsValue, numRosterValue);\n    setIsOpen(!isOpen);\n  }\n\n\n  return(\n  <Modal\n    isOpen={isOpen}\n    onRequestClose={toggleModal}\n    contentLabel=\"My dialog\"\n    className=\"mymodal\"\n    overlayClassName=\"myoverlay\"\n    closeTimeoutMS={250}\n    shouldCloseOnOverlayClick={false}\n    >\n    <div className=\"numberOfGroupsParent\">\n      <h4 className=\"numberOfGroupsLabel\">Number Of Groups: </h4>\n      <select value={numGroupsValue} onChange={handleGroupChange}>\n        {groupNumArray.map(num => {\n          return(\n            <option key={nanoid()} value={num}>{num}</option>\n          )\n        })}\n      </select>\n    </div>\n    <div className=\"numberOfRosterParent\">\n      <h3 className=\"numberOfRosterLabel\">Number Of Prople: </h3>\n      <select value={numRosterValue} onChange={handleRosterChange}>\n      {rosterNumArray.map(num => {\n        return(\n          <option key={nanoid()} value={num}>{num}</option>\n        )\n      })}\n      </select>\n\n    </div>\n    <button className=\"modalSubmit-btn\" onClick={handleOnclick}>Go</button>\n\n  </Modal>\n  );\n}\n\nexport default SetupModal;\n"]},"metadata":{},"sourceType":"module"}