{"ast":null,"code":"var _jsxFileName = \"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/ResultPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Nav from '../Nav/Nav';\nimport ResultDisplay from '../ResultDisplay/ResultDisplay';\nimport Footer from '../Footer/Footer';\nimport ResultsTitle from '../ResultsTitle/ResultsTitle';\nimport { Group, Person, GroupName } from '../../utils/groupClass.js'; //watch out for utils. keep for merge\n\nimport { Redirect } from 'react-router-dom';\nimport { getRequest, postRequest } from \"../../utils/queries.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ResultsPage(props) {\n  _s();\n\n  let GroupObject = new Group();\n\n  if (props.location.fromLandingPage) {\n    GroupObject = () => {\n      let tempGroup = new Group();\n      tempGroup.persons = props.location.json.persons;\n      tempGroup.groupNames = props.location.json.groupNames;\n      tempGroup.setProjectName(props.location.json.projectName);\n      return tempGroup;\n    };\n  } else {\n    GroupObject = props.location.GroupObject;\n  } // –––––––\n  //  State\n  // –––––––\n\n\n  const [aGroupObject, setGroupObject] = useState(GroupObject);\n  const [fromLandingPage, setFromLandingPage] = useState(props.location.fromLandingPage);\n  const [fromInputPage, setFromInputPage] = useState(props.location.fromInputPage);\n  const [aJson, setAjson] = useState(props.location.json);\n  const [editButtonClicked, setEditButtonClicked] = useState(false); // Check console to see from which page is being received\n  // console.log(\"FROM LANDING:\", fromLandingPage);\n  // console.log(\"FROM INPUT:\", fromInputPage);\n  // ––––––––\n  // Behavior\n  // ––––––––\n\n  function handleOnClickSave() {\n    console.log(\"SAVE BUTTON CLICKED...\"); //save to db by using utility component\n\n    const groups = new Group(); // groups.setProjectName(\"Project Safari\");\n    // groups.addPerson(new Person(\"Lion\", 1));\n    // groups.addPerson(new Person(\"Elephant\", 2));\n    // groups.addGroupNames(new GroupName(\"Section Danger\"));\n    // groups.addGroupNames(new GroupName(\"Section Safe\"));\n\n    groups.setProjectName(aGroupObject.projectName);\n    groups.persons = aGroupObject.persons;\n    groups.groupNames = aGroupObject.groupNames;\n    var myJSON = JSON.stringify(groups); //aGroupObject\n\n    console.log(JSON.stringify(JSON.parse(myJSON), null, 2));\n    const json = postRequest(myJSON);\n    setAjson(json);\n  } //when the edit button is clicked, setEditButtonClicked is set to true which triggers the conditional below function.\n\n\n  function handleOnClickEdit() {\n    // console.log(\"EDIT BUTTON CLICKED...\");\n    setEditButtonClicked(true);\n  } // Checks and sends correct state data type to input page\n\n\n  if (editButtonClicked) {\n    if (fromLandingPage) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/grouper',\n          json: aJson,\n          fromResultPage: true,\n          fromLandingPage: false,\n          fromInputPage: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/grouper',\n          GroupObject: aGroupObject,\n          fromResultPage: true,\n          fromLandingPage: false,\n          fromInputPage: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResultsTitle, {\n        title: aGroupObject.projectName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"entry-container\",\n      children: /*#__PURE__*/_jsxDEV(ResultDisplay, {\n        groupObject: aGroupObject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer // value=\"Save\"\n    , {\n      fromInputPage: fromInputPage\n      /* need fromLandingPage boolean */\n      ,\n      fromLandingPage: fromLandingPage,\n      onClickEdit: handleOnClickEdit,\n      onClickSave: handleOnClickSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ResultsPage, \"Y0SVH49jzFNy86k4j1JHo1ierKw=\");\n\n_c = ResultsPage;\nexport default ResultsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"sources":["/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/ResultPage.js"],"names":["React","useState","Nav","ResultDisplay","Footer","ResultsTitle","Group","Person","GroupName","Redirect","getRequest","postRequest","ResultsPage","props","GroupObject","location","fromLandingPage","tempGroup","persons","json","groupNames","setProjectName","projectName","aGroupObject","setGroupObject","setFromLandingPage","fromInputPage","setFromInputPage","aJson","setAjson","editButtonClicked","setEditButtonClicked","handleOnClickSave","console","log","groups","myJSON","JSON","stringify","parse","handleOnClickEdit","pathname","fromResultPage"],"mappings":"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","sourcesContent":["\nimport React, { useState,  } from 'react';\nimport Nav from '../Nav/Nav';\nimport ResultDisplay from '../ResultDisplay/ResultDisplay';\nimport Footer from '../Footer/Footer';\nimport ResultsTitle from '../ResultsTitle/ResultsTitle';\nimport {Group, Person, GroupName} from '../../utils/groupClass.js';  //watch out for utils. keep for merge\nimport {Redirect} from 'react-router-dom';\nimport {getRequest, postRequest} from \"../../utils/queries.js\";\n\n\nfunction ResultsPage(props) {\n\n  let GroupObject = new Group();\n\n  if (props.location.fromLandingPage) {\n    GroupObject = () => {\n       let tempGroup = new Group();\n       tempGroup.persons = props.location.json.persons;\n       tempGroup.groupNames = props.location.json.groupNames;\n       tempGroup.setProjectName(props.location.json.projectName);\n\n       return tempGroup;\n     }\n   } else {\n     GroupObject = props.location.GroupObject;\n   }\n\n\n  // –––––––\n  //  State\n  // –––––––\n\n  const [aGroupObject, setGroupObject] = useState(GroupObject);\n  const [fromLandingPage, setFromLandingPage] = useState(props.location.fromLandingPage);\n  const [fromInputPage, setFromInputPage] = useState(props.location.fromInputPage);\n  const [aJson, setAjson] = useState(props.location.json);\n  const [editButtonClicked, setEditButtonClicked] = useState(false);\n  \n  // Check console to see from which page is being received\n  // console.log(\"FROM LANDING:\", fromLandingPage);\n  // console.log(\"FROM INPUT:\", fromInputPage);\n\n\n  // ––––––––\n  // Behavior\n  // ––––––––\n\n  function handleOnClickSave() {\n    console.log(\"SAVE BUTTON CLICKED...\");\n    //save to db by using utility component\n\n    const groups = new Group();\n\n    // groups.setProjectName(\"Project Safari\");\n    // groups.addPerson(new Person(\"Lion\", 1));\n    // groups.addPerson(new Person(\"Elephant\", 2));\n    // groups.addGroupNames(new GroupName(\"Section Danger\"));\n    // groups.addGroupNames(new GroupName(\"Section Safe\"));\n    groups.setProjectName(aGroupObject.projectName);\n    groups.persons = aGroupObject.persons;\n    groups.groupNames = aGroupObject.groupNames;\n    var myJSON = JSON.stringify(groups);  //aGroupObject\n\n    console.log(JSON.stringify(JSON.parse(myJSON), null, 2));\n    const json = postRequest(myJSON);\n    setAjson(json);\n\n  }\n\n  //when the edit button is clicked, setEditButtonClicked is set to true which triggers the conditional below function.\n  function handleOnClickEdit(){\n    // console.log(\"EDIT BUTTON CLICKED...\");\n    setEditButtonClicked(true);\n  }\n\n\n  // Checks and sends correct state data type to input page\n  if (editButtonClicked){\n    if (fromLandingPage) {\n      return <Redirect to={{pathname: '/grouper', json: aJson, fromResultPage: true, fromLandingPage: false, fromInputPage: false}}/>;\n    } else {\n      return <Redirect to={{pathname: '/grouper', GroupObject: aGroupObject, fromResultPage: true, fromLandingPage: false, fromInputPage: false}}/>;\n    }\n  }\n\n\n  return (\n      <div className=\"page-wrapper\">\n        <header>\n          <Nav />\n          <ResultsTitle title={aGroupObject.projectName}/>\n        </header>\n        <main id=\"entry-container\">\n          <ResultDisplay groupObject={aGroupObject}/>\n        </main>\n          <Footer\n            // value=\"Save\"\n            fromInputPage={fromInputPage}  /* need fromLandingPage boolean */\n            fromLandingPage={fromLandingPage}\n            onClickEdit={handleOnClickEdit}\n            onClickSave={handleOnClickSave}/>\n      </div>\n  );\n\n}\n\nexport default ResultsPage;\n"]},"metadata":{},"sourceType":"module"}