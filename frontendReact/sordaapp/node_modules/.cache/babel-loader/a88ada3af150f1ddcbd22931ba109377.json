{"ast":null,"code":"var _jsxFileName = \"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Nav from '../Nav/Nav';\nimport TitleBar from '../TitleBar/TitleBar';\nimport GroupSection from '../GroupSection/GroupSection';\nimport RosterSection from '../RosterSection/RosterSection';\nimport Footer from '../Footer/Footer';\nimport { Group, GroupName, Person } from '../../utils/groupClass';\nimport e from 'cors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InputPage() {\n  _s();\n\n  let GroupObject = new Group();\n  GroupObject.setProjectName(\"My Project\");\n  const [aGroupObject, setAGroupObject] = useState(GroupObject); // Title Behavior  = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\n\n  let updateProjectName = title => {\n    console.log('Updating Project Name: ' + title);\n    setAGroupObject(aGroupObject => ({ ...aGroupObject,\n      projectName: title\n    }));\n  }; // Group Section Behavior  = = = = = = = = = = = = = = = = = = = = = = = = = = = =\n\n\n  let addGroup = () => {\n    console.log(\"addGroup clicked...\");\n    let tempGroupObject = aGroupObject;\n    let tempGroupNames = tempGroupObject.groupNames;\n    let newName = \"Group \" + (tempGroupNames.length + 1);\n    let newGroupName = new GroupName(newName, null);\n    tempGroupNames.push(newGroupName);\n    console.log(tempGroupNames);\n    setAGroupObject(aGroupObject => ({ ...aGroupObject,\n      groupNames: tempGroupNames\n    }));\n  };\n\n  let deleteGroup = e => {\n    let index = e.target.value;\n    console.log(\"Deleting Group... \", index);\n    let tempGroupObject = aGroupObject;\n    let newGroupNames = tempGroupObject.groupNames;\n    newGroupNames.splice(index, 1);\n    setAGroupObject(aGroupObject => ({ ...aGroupObject,\n      groupNames: newGroupNames\n    }));\n  };\n\n  let updateGroupTitle = (title, index) => {\n    console.log(\"Upade Group Title:: \\nIndex:\", index, \"\\nValue:\", title);\n    let newGroupNames = aGroupObject.groupNames;\n    newGroupNames[index].name = title;\n    setAGroupObject(aGroupObject => ({ ...aGroupObject,\n      groupNames: newGroupNames\n    }));\n  }; // Roster Section Behavior  = = = = = = = = = = = = = = = = = = = = = = = = = = = =\n\n\n  let addItem = () => {\n    console.log(\"addItem clicked...\"); // let tempGroupObject = aGroupObject;\n\n    let tempItemList = aGroupObject.persons;\n    let newItemName = \"item \" + (tempItemList.length + 1);\n    let newItem = new Person(newItemName, null);\n    tempItemList.push(newItem);\n    console.log(tempItemList);\n    setAGroupObject(aGroupObject => ({ ...aGroupObject,\n      persons: tempItemList\n    }));\n  };\n\n  let deleteItem = e => {\n    let index = e.target.value;\n    console.log(\"Deleting Roster Item... \", index);\n    let tempGroupObject = aGroupObject;\n    let newItemsList = tempGroupObject.persons;\n    newItemsList.splice(index, 1);\n    setAGroupObject(aGroupObject => ({ ...aGroupObject,\n      persons: newItemsList\n    }));\n  };\n\n  let updateItemName = (title, index) => {\n    console.log(\"Update Roster Name:: \\nIndex:\", index, \"\\nValue:\", title);\n    let newItemsList = aGroupObject.persons;\n    newItemsList[index].name = title;\n    setAGroupObject(aGroupObject => ({ ...aGroupObject,\n      persons: newItemsList\n    }));\n  }; // Footer Button Handler  = = = = = = = = = = = = = = = = = = = = = = = = = = = =\n\n\n  let shuffleData = () => {\n    console.log(\"shuffle clicked...\"); // Shuffle Roster Items randomly\n    // Assign each roster item a group #\n    // Save shuffled data as new group object\n\n    saveProject(); // return <Redirect push to={{ pathname: '/results', groupObject: aProjectState, fromInput=true }} />\n  };\n\n  let saveProject = () => {\n    console.log('saving shuffled project...'); // let tempGroupObject = aGroupObject;\n    // tempGroupObject.projectName = aProjectName;\n    // tempGroupObject.groupNames = aGroupNames;\n    // // tempGroupObject.persons = aPersons;\n    // console.log('new object to save:', tempGroupObject);\n    // setAGroupObject(tempGroupObject);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TitleBar, {\n        title: aGroupObject.projectName,\n        updateTitle: updateProjectName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"entry-container\",\n      children: [/*#__PURE__*/_jsxDEV(GroupSection, {\n        groupNames: aGroupObject.groupNames,\n        addGroup: addGroup,\n        deleteGroup: deleteGroup,\n        updateGroupTitle: updateGroupTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RosterSection, {\n        rosterItems: aGroupObject.persons,\n        addItem: addItem,\n        deleteItem: deleteItem,\n        updateItemName: updateItemName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      GroupObject: aGroupObject,\n      onClick: shuffleData // value=\"Shuffle\" \n      // text=\"Shuffle\"\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InputPage, \"oM9/KRIaDbf4eK7pbZNPOnJPMCE=\");\n\n_c = InputPage;\nexport default InputPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputPage\");","map":{"version":3,"sources":["/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js"],"names":["React","useState","Nav","TitleBar","GroupSection","RosterSection","Footer","Group","GroupName","Person","e","InputPage","GroupObject","setProjectName","aGroupObject","setAGroupObject","updateProjectName","title","console","log","projectName","addGroup","tempGroupObject","tempGroupNames","groupNames","newName","length","newGroupName","push","deleteGroup","index","target","value","newGroupNames","splice","updateGroupTitle","name","addItem","tempItemList","persons","newItemName","newItem","deleteItem","newItemsList","updateItemName","shuffleData","saveProject"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Nav from '../Nav/Nav';\nimport TitleBar from '../TitleBar/TitleBar';\nimport GroupSection from '../GroupSection/GroupSection';\nimport RosterSection from '../RosterSection/RosterSection';\nimport Footer from '../Footer/Footer';\nimport { Group, GroupName, Person } from '../../utils/groupClass';\nimport e from 'cors';\n\n\nfunction InputPage () {\n  let GroupObject = new Group();\n  GroupObject.setProjectName(\"My Project\");\n\n  const [aGroupObject, setAGroupObject] = useState(GroupObject);\n\n\n  // Title Behavior  = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\n\n  let updateProjectName = title => {\n    console.log('Updating Project Name: ' + title);\n    setAGroupObject(aGroupObject => ({...aGroupObject, projectName: title})); \n  }\n  \n\n  // Group Section Behavior  = = = = = = = = = = = = = = = = = = = = = = = = = = = =\n\n  let addGroup = () => {\n      console.log(\"addGroup clicked...\");\n\n      let tempGroupObject = aGroupObject;\n      let tempGroupNames = tempGroupObject.groupNames;\n      let newName = \"Group \" + (tempGroupNames.length + 1); \n      let newGroupName = new GroupName(newName, null);\n\n      tempGroupNames.push(newGroupName);   \n      console.log(tempGroupNames);\n\n      setAGroupObject(aGroupObject => ({...aGroupObject, groupNames: tempGroupNames}));\n  }\n\n  let deleteGroup = e => {\n    let index = e.target.value;\n    console.log(\"Deleting Group... \", index);\n    let tempGroupObject = aGroupObject;\n    let newGroupNames = tempGroupObject.groupNames;\n\n    newGroupNames.splice(index, 1);\n    setAGroupObject(aGroupObject => ({...aGroupObject, groupNames: newGroupNames}));\n  }\n\n  let updateGroupTitle = (title, index) => {\n    console.log(\"Upade Group Title:: \\nIndex:\", index, \"\\nValue:\", title);\n\n    let newGroupNames = aGroupObject.groupNames;\n    newGroupNames[index].name = title;\n\n    setAGroupObject(aGroupObject => ({...aGroupObject, groupNames: newGroupNames}));\n  }\n\n\n  // Roster Section Behavior  = = = = = = = = = = = = = = = = = = = = = = = = = = = =\n\n  let addItem = () => {\n      console.log(\"addItem clicked...\");\n\n      // let tempGroupObject = aGroupObject;\n      let tempItemList = aGroupObject.persons;\n      let newItemName = \"item \" + (tempItemList.length + 1); \n      let newItem = new Person(newItemName, null);\n\n      tempItemList.push(newItem);   \n      console.log(tempItemList);\n\n      setAGroupObject(aGroupObject => ({...aGroupObject, persons: tempItemList}));\n  }\n\n  let deleteItem = e => {\n    let index = e.target.value;\n    console.log(\"Deleting Roster Item... \", index);\n    let tempGroupObject = aGroupObject;\n    let newItemsList = tempGroupObject.persons;\n\n    newItemsList.splice(index, 1);\n    setAGroupObject(aGroupObject => ({...aGroupObject, persons: newItemsList}));\n  }\n\n  let updateItemName = (title, index) => {\n    console.log(\"Update Roster Name:: \\nIndex:\", index, \"\\nValue:\", title);\n\n    let newItemsList = aGroupObject.persons;\n    newItemsList[index].name = title;\n\n    setAGroupObject(aGroupObject => ({...aGroupObject, persons: newItemsList}));\n  }\n\n\n  // Footer Button Handler  = = = = = = = = = = = = = = = = = = = = = = = = = = = =\n  \n  let shuffleData = () => {\n    console.log(\"shuffle clicked...\");\n    // Shuffle Roster Items randomly\n    \n    // Assign each roster item a group #\n    \n    // Save shuffled data as new group object\n    saveProject();\n    \n    // return <Redirect push to={{ pathname: '/results', groupObject: aProjectState, fromInput=true }} />\n  }\n\n  let saveProject = () => {\n    console.log('saving shuffled project...');\n    // let tempGroupObject = aGroupObject;\n\n    // tempGroupObject.projectName = aProjectName;\n    // tempGroupObject.groupNames = aGroupNames;\n    // // tempGroupObject.persons = aPersons;\n\n    // console.log('new object to save:', tempGroupObject);\n    // setAGroupObject(tempGroupObject);\n  }\n\n    return (\n        <div>\n          <header className=\"App-header\">\n            <Nav />\n            <TitleBar \n              title={aGroupObject.projectName} \n              updateTitle={updateProjectName} /> \n          </header>\n          <main id=\"entry-container\">\n            <GroupSection \n              groupNames={aGroupObject.groupNames}\n              addGroup={addGroup}\n              deleteGroup={deleteGroup}\n              updateGroupTitle={updateGroupTitle} />\n            <RosterSection \n              rosterItems={aGroupObject.persons}\n              addItem={addItem}\n              deleteItem={deleteItem}\n              updateItemName={updateItemName} />\n          </main>\n            <Footer \n              GroupObject={aGroupObject}\n              onClick={shuffleData}\n              // value=\"Shuffle\" \n              // text=\"Shuffle\"\n              />\n        </div>\n    );\n  }\n\nexport default InputPage;\n"]},"metadata":{},"sourceType":"module"}