{"ast":null,"code":"var _jsxFileName = \"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Nav from '../Nav/Nav';\nimport TitleBar from '../TitleBar/TitleBar';\nimport GroupSection from '../GroupSection/GroupSection';\nimport RosterSection from '../RosterSection/RosterSection';\nimport Footer from '../Footer/Footer';\nimport { Group } from '../../groupClass'; // import { Redirect } from 'react-router';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InputPage() {\n  _s();\n\n  let GroupObject = new Group();\n  const [aProjectState, setAProjectState] = useState(GroupObject);\n  const [aProjectName, setAProjectName] = useState(\"My Project\");\n  const [aGroupNames, setAGroupNames] = useState([]); // console.log(\"GroupObject:\", GroupObject);\n  // console.log(\"aInput:\", aProjectState);\n\n  useEffect(() => {\n    console.log(\"useEffect...\");\n    let tempState = aProjectState;\n    console.log(tempState);\n    tempState.projectName = aProjectName;\n    tempState.aGroupNames = aGroupNames;\n    setInput(tempState);\n    console.log(aProjectState);\n  }, [aProjectState, aProjectName, aGroupNames]);\n\n  let shuffleData = () => {\n    console.log(\"shuffle clicked...\"); // Shuffle Roster Items randomly\n    // Assign each roster item a group #\n    // Save shuffle data\n    // return <Redirect push to={{ pathname: '/results', groupObject: aProjectState, fromInput=true }} />\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TitleBar, {\n        title: aProjectName,\n        setTitle: setAProjectName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"entry-container\",\n      children: [/*#__PURE__*/_jsxDEV(GroupSection, {\n        groupNames: aGroupNames,\n        setGroupNames: group => setAGroupNames(group)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RosterSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      GroupObject: {\n        aProjectState\n      },\n      value: \"Shuffle\",\n      text: \"Shuffle\",\n      onClick: shuffleData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InputPage, \"I65Nrll9AuCsuU0Olf1Fj5boAII=\");\n\n_c = InputPage;\nexport default InputPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputPage\");","map":{"version":3,"sources":["/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js"],"names":["React","useState","useEffect","Nav","TitleBar","GroupSection","RosterSection","Footer","Group","InputPage","GroupObject","aProjectState","setAProjectState","aProjectName","setAProjectName","aGroupNames","setAGroupNames","console","log","tempState","projectName","setInput","shuffleData","group"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CACA;;;;AAIA,SAASC,SAAT,GAAsB;AAAA;;AACpB,MAAIC,WAAW,GAAG,IAAIF,KAAJ,EAAlB;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAACS,WAAD,CAAlD;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,YAAD,CAAhD;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C,CAJoB,CAMpB;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,QAAIC,SAAS,GAAGR,aAAhB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AAEAA,IAAAA,SAAS,CAACC,WAAV,GAAwBP,YAAxB;AACAM,IAAAA,SAAS,CAACJ,WAAV,GAAwBA,WAAxB;AACAM,IAAAA,QAAQ,CAACF,SAAD,CAAR;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYP,aAAZ;AAED,GAVQ,EAUN,CAACA,aAAD,EAAgBE,YAAhB,EAA8BE,WAA9B,CAVM,CAAT;;AAaA,MAAIO,WAAW,GAAG,MAAM;AACtBL,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EADsB,CAGtB;AACA;AACA;AAEA;AACD,GARD;;AAUE,sBACI;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEL,YAAjB;AAA+B,QAAA,QAAQ,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAM,MAAA,EAAE,EAAC,iBAAT;AAAA,8BACE,QAAC,YAAD;AACE,QAAA,UAAU,EAAEC,WADd;AAEE,QAAA,aAAa,EAAGQ,KAAD,IAAWP,cAAc,CAACO,KAAD;AAF1C;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAaE,QAAC,MAAD;AACE,MAAA,WAAW,EAAE;AAACZ,QAAAA;AAAD,OADf;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,IAAI,EAAC,SAHP;AAIE,MAAA,OAAO,EAAEW;AAJX;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBD;;GArDMb,S;;KAAAA,S;AAuDT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Nav from '../Nav/Nav';\nimport TitleBar from '../TitleBar/TitleBar';\nimport GroupSection from '../GroupSection/GroupSection';\nimport RosterSection from '../RosterSection/RosterSection';\nimport Footer from '../Footer/Footer';\nimport { Group } from '../../groupClass';\n// import { Redirect } from 'react-router';\n\n\n\nfunction InputPage () {\n  let GroupObject = new Group();\n  const [aProjectState, setAProjectState] = useState(GroupObject);\n  const [aProjectName, setAProjectName] = useState(\"My Project\");\n  const [aGroupNames, setAGroupNames] = useState([]);\n  \n  // console.log(\"GroupObject:\", GroupObject);\n  // console.log(\"aInput:\", aProjectState);\n\n  useEffect(() => {\n    console.log(\"useEffect...\");\n    let tempState = aProjectState;\n    console.log(tempState);\n\n    tempState.projectName = aProjectName;\n    tempState.aGroupNames = aGroupNames;\n    setInput(tempState);\n    console.log(aProjectState);\n\n  }, [aProjectState, aProjectName, aGroupNames])\n    \n\n  let shuffleData = () => {\n    console.log(\"shuffle clicked...\");\n\n    // Shuffle Roster Items randomly\n    // Assign each roster item a group #\n    // Save shuffle data\n\n    // return <Redirect push to={{ pathname: '/results', groupObject: aProjectState, fromInput=true }} />\n  }\n\n    return (\n        <div>\n          <header className=\"App-header\">\n            <Nav />\n            <TitleBar title={aProjectName} setTitle={setAProjectName} /> \n            \n          </header>\n          <main id=\"entry-container\">\n            <GroupSection \n              groupNames={aGroupNames}\n              setGroupNames={(group) => setAGroupNames(group)}\n              />\n            <RosterSection />\n          </main>\n          <Footer \n            GroupObject={{aProjectState}}\n            value=\"Shuffle\" \n            text=\"Shuffle\"\n            onClick={shuffleData} />\n        </div>\n    );\n  }\n\nexport default InputPage;\n"]},"metadata":{},"sourceType":"module"}