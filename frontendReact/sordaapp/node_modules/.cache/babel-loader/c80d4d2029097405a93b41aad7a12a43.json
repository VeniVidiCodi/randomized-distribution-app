{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupSection/GroupSection.js\";\nimport React, { Component } from 'react';\nimport './GroupSection.css';\nimport NewGroupButton from '../NewGroupButton/NewGroupButton';\nimport GroupMenuButton from '../GroupMenuButton/GroupMenuButton';\nimport GroupCard from '../GroupCard/GroupCard';\n\nclass GroupSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      max: 8,\n      min: 2,\n      // menuButtons: [2, 3, 4, 5, 6, 7, 8],\n      menuButtons: [],\n      // renderButtons: () => {\n      //     for (let i=this.min; i<this.max; i++) {\n      //         this.menuButtons.push(i);\n      //     }\n      // },\n      showGroupMenu: true,\n      projectName: \"Grouper\",\n      groups: [// {groupName: \"Group 1\", id: 0}\n      ],\n      rosterItems: [// {\"Kenly\": 1},\n        // {\"Victor\" : 2}\n      ]\n    }; // this.handleClick = this.handleClick.bind(this); EXAMPLE\n\n    this.addGroup = this.addGroup.bind(this);\n    this.generateGroups = this.generateGroups.bind(this);\n  } //  LIFECYCLE -------------------------------------------------\n\n\n  renderGroupMenu() {\n    for (let i = this.min; i < this.max; i++) {\n      this.menuButtons.push(i);\n    }\n  } // EVENT HANDLERS -------------------------------------------------\n  // Add entry to state's group array\n\n\n  addGroup() {\n    console.log(\"Adding new group...\");\n    let index = this.state.groups.length;\n    let groups = this.state.groups;\n    let groupName = \"Group \" + (index + 1);\n    let group = {\n      groupName: groupName,\n      id: this.state.groups.length + 1\n    }; // Replace with class?\n\n    groups.push(group);\n    this.setState({\n      groups: groups\n    });\n  } // Add multiple entries to group array\n\n\n  generateGroups(e) {\n    console.log(\"Generating multiple groups...\");\n    let num = e.target.innerText;\n    let groups = []; // Resets the groups array\n\n    let showGroupMenu = this.state.showGroupMenu; // When the user clicks the menu, remove or mask down the button menu\n\n    showGroupMenu = false; // Populate the groups array with chosen number of entries\n\n    for (let i = 0; i < num; i++) {\n      let groupName = \"Group \" + (i + 1);\n      let group = {\n        groupName: groupName,\n        id: i\n      }; // Replace with class?\n\n      groups.push(group);\n    }\n\n    this.setState({\n      groups: groups,\n      showGroupMenu: showGroupMenu\n    });\n    console.log(\"Groups generated:\", groups);\n  }\n\n  render() {\n    console.log(this.state.groups);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"group-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-header-caption\",\n          children: \"Groups/Categories:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), this.state.showGroupMenu ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-btn-container\",\n          children: this.state.menuButtons.map(button => /*#__PURE__*/_jsxDEV(GroupMenuButton, {\n            value: button,\n            onClick: this.generateGroups\n          }, button, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-items-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"groups-display-wrapper\",\n          children: [this.state.groups.map(group => /*#__PURE__*/_jsxDEV(GroupCard, {\n            id: group.id,\n            title: group.groupName\n          }, group.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this)), this.state.groups.length < this.state.max ? /*#__PURE__*/_jsxDEV(NewGroupButton, {\n            onClick: this.addGroup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GroupSection;","map":{"version":3,"sources":["/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/GroupSection/GroupSection.js"],"names":["React","Component","NewGroupButton","GroupMenuButton","GroupCard","GroupSection","constructor","props","state","max","min","menuButtons","showGroupMenu","projectName","groups","rosterItems","addGroup","bind","generateGroups","renderGroupMenu","i","push","console","log","index","length","groupName","group","id","setState","e","num","target","innerText","render","map","button","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './GroupSection.css';\nimport NewGroupButton from '../NewGroupButton/NewGroupButton';\nimport GroupMenuButton from '../GroupMenuButton/GroupMenuButton';\nimport GroupCard from '../GroupCard/GroupCard';\n\nclass GroupSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            max: 8,\n            min: 2,\n            // menuButtons: [2, 3, 4, 5, 6, 7, 8],\n            menuButtons: [],\n            // renderButtons: () => {\n            //     for (let i=this.min; i<this.max; i++) {\n            //         this.menuButtons.push(i);\n            //     }\n            // },\n            showGroupMenu: true,\n            projectName: \"Grouper\",\n            groups: [\n                // {groupName: \"Group 1\", id: 0}\n            ], \n            rosterItems: [\n                // {\"Kenly\": 1},\n                // {\"Victor\" : 2}\n            ] \n        }\n        // this.handleClick = this.handleClick.bind(this); EXAMPLE\n        this.addGroup = this.addGroup.bind(this);\n        this.generateGroups = this.generateGroups.bind(this);\n    }    \n\n    //  LIFECYCLE -------------------------------------------------\n    renderGroupMenu() {\n        for (let i=this.min; i<this.max; i++) {\n            this.menuButtons.push(i);\n        }\n    }\n\n    // EVENT HANDLERS -------------------------------------------------\n\n    // Add entry to state's group array\n    addGroup() {\n        console.log(\"Adding new group...\");\n        let index  = this.state.groups.length;\n        let groups = this.state.groups;\n        let groupName = \"Group \" + (index + 1);\n        let group = {\n                        groupName : groupName,\n                        id: this.state.groups.length + 1\n                    }  // Replace with class?\n        groups.push(group);\n        this.setState({groups: groups});\n    }\n\n    // Add multiple entries to group array\n    generateGroups(e) {\n        console.log(\"Generating multiple groups...\");\n        let num = e.target.innerText;\n        let groups = [];    // Resets the groups array\n        let showGroupMenu = this.state.showGroupMenu;\n\n        // When the user clicks the menu, remove or mask down the button menu\n        showGroupMenu = false;\n\n        // Populate the groups array with chosen number of entries\n        for (let i=0; i<num; i++) {\n            let groupName = \"Group \" + (i + 1);\n            let group = {\n                groupName: groupName,\n                id : i\n            }  // Replace with class?\n            groups.push(group);\n        }\n\n        this.setState({\n            groups: groups,\n            showGroupMenu: showGroupMenu\n        });\n        console.log(\"Groups generated:\", groups);\n    }\n    \n\n    render() {\n        console.log(this.state.groups);\n        return (\n            <div className=\"group-section\">\n\n                <header className=\"group-nav\">\n                    <div className=\"group-header-caption\">Groups/Categories:</div>\n                    {this.state.showGroupMenu ? \n                    <div className=\"group-btn-container\">\n                        {this.state.menuButtons.map((button) => \n                            <GroupMenuButton \n                                key={button}\n                                value={button} \n                                onClick={this.generateGroups}\n                            />\n                        )}\n\n                    </div>:\n                    <div></div>}\n                </header>\n\n                <div className=\"group-items-container\">\n                    <div id=\"groups-display-wrapper\">\n                        {this.state.groups.map((group) => \n                            <GroupCard \n                                key={group.key} \n                                id={group.id} \n                                title={group.groupName} />\n                        )}\n                        {this.state.groups.length < this.state.max ? \n                            <NewGroupButton onClick={this.addGroup} /> :\n                            <div></div>\n                        }\n                    </div>\n                </div>   \n                    \n            </div>\n        );\n    }\n}\n\nexport default GroupSection;"]},"metadata":{},"sourceType":"module"}