{"ast":null,"code":"var _jsxFileName = \"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterSection/RosterSection.js\";\nimport React, { Component } from 'react';\nimport './RosterSection.css';\nimport RosterCard from '../RosterCard/RosterCard';\nimport NewItemButton from '../NewItemButton/NewItemButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RosterSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rosterMax: 40,\n      rosterMin: 2,\n      // OR min. should be at least the number of groups created...\n      menuRange: [],\n      keys: [],\n      showRoster: true,\n      roster: [// {key:'', name: \"Kenly\", group: 1},\n        // {key:'', name: \"Victor\", group: 2}\n      ]\n    };\n    this.generateItems = this.generateItems.bind(this);\n    this.generateKeys = this.generateKeys.bind(this);\n    this.renderSelectMenu = this.renderSelectMenu.bind(this);\n    this.addItem = this.addItem.bind(this);\n  } //  LIFECYCLE -------------------------------------------------\n\n\n  componentDidMount() {\n    this.renderSelectMenu(); // this.generateKeys(this.state.roster);\n  }\n\n  generateKeys() {\n    console.log(\"Generating KEYS...\");\n    let keys = [];\n    let roster = this.state.roster;\n    let i = 0;\n\n    for (let item of roster) {\n      let key = i * 3;\n      item.key = key;\n      item.value = i;\n      i++;\n      console.log(\"KEY: \" + item.key, \"\\n VALUE: \" + item.value);\n    } // console.log(\"Roster w/keys?\" + roster);\n\n\n    this.setState({\n      roster: roster\n    });\n  } // // Create the options list for dropdown select menu\n  // renderSelectMenu() {\n  //     console.log('Make dropdown menu for roster...');\n  //     // Loop through range of min/max to populate the menuRange array\n  //     let menuRange = [];\n  //     let min = this.state.rosterMin;\n  //     let max = this.state.rosterMax;\n  //     for (let i=min; i<=max; i++) {\n  //         let obj = {key:null, value:i};\n  //         obj.key = i * 3;\n  //         menuRange.push(i);\n  //     }\n  //     this.setState({menuRange: menuRange});\n  //     console.log('MENU RANGE: ' + menuRange);\n  // }\n\n\n  addItem() {\n    console.log('Add Roster Item...');\n  }\n\n  generateItems() {\n    console.log('Generate roster list base...');\n  }\n\n  render() {\n    console.log(\"RANGE::\" + this.state.menuRange);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roster-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"roster-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roster-header-caption \",\n          children: \"Roster/Items:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"roster\",\n          id: \"roster-select\",\n          children: this.state.menuRange.map(num => {\n            /*#__PURE__*/\n            _jsxDEV(\"option\", {\n              value: num.value,\n              children: num.value\n            }, num.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roster-items-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"roster-display-wrapper\",\n          children: [this.state.roster.map(item => /*#__PURE__*/_jsxDEV(RosterCard, {\n            name: item.name\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(NewItemButton, {\n            onClick: this.addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), \" :\", /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default RosterSection;","map":{"version":3,"sources":["/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/RosterSection/RosterSection.js"],"names":["React","Component","RosterCard","NewItemButton","RosterSection","constructor","props","state","rosterMax","rosterMin","menuRange","keys","showRoster","roster","generateItems","bind","generateKeys","renderSelectMenu","addItem","componentDidMount","console","log","i","item","key","value","setState","render","map","num","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,qBAAP;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,SAAS,EAAE,CAFF;AAEM;AACfC,MAAAA,SAAS,EAAE,EAHF;AAITC,MAAAA,IAAI,EAAE,EAJG;AAKTC,MAAAA,UAAU,EAAE,IALH;AAMTC,MAAAA,MAAM,EAAE,CACJ;AACA;AAFI;AANC,KAAb;AAYA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKG,OAAL,GAAe,KAAKA,OAAL,CAAaH,IAAb,CAAkB,IAAlB,CAAf;AACH,GAnBiC,CAqBjC;;;AACDI,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,gBAAL,GADgB,CAEhB;AACH;;AAEDD,EAAAA,YAAY,GAAG;AACXI,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,QAAIV,IAAI,GAAG,EAAX;AACA,QAAIE,MAAM,GAAG,KAAKN,KAAL,CAAWM,MAAxB;AACA,QAAIS,CAAC,GAAG,CAAR;;AACA,SAAK,IAAIC,IAAT,IAAiBV,MAAjB,EAAyB;AACrB,UAAIW,GAAG,GAAGF,CAAC,GAAG,CAAd;AACAC,MAAAA,IAAI,CAACC,GAAL,GAAWA,GAAX;AACAD,MAAAA,IAAI,CAACE,KAAL,GAAaH,CAAb;AACAA,MAAAA,CAAC;AACDF,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUE,IAAI,CAACC,GAA3B,EACY,eAAeD,IAAI,CAACE,KADhC;AAEH,KAZU,CAaX;;;AACA,SAAKC,QAAL,CAAc;AAACb,MAAAA,MAAM,EAAEA;AAAT,KAAd;AACH,GA1CiC,CA6ClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAK,EAAAA,OAAO,GAAG;AACNE,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH;;AAEDP,EAAAA,aAAa,GAAG;AACZM,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AAEH;;AAGDM,EAAAA,MAAM,GAAG;AACLP,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAY,KAAKd,KAAL,CAAWG,SAAnC;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,EAAE,EAAC,eAAzB;AAAA,oBACK,KAAKH,KAAL,CAAWG,SAAX,CAAqBkB,GAArB,CAAyBC,GAAG,IAAI;AAC7B;AAAA;AAAsB,cAAA,KAAK,EAAEA,GAAG,CAACJ,KAAjC;AAAA,wBAAyCI,GAAG,CAACJ;AAA7C,eAAaI,GAAG,CAACL,GAAjB;AAAA;AAAA;AAAA;AAAA;AACH,WAFA;AADL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,+BAEI;AAAK,UAAA,EAAE,EAAC,wBAAR;AAAA,qBACK,KAAKjB,KAAL,CAAWM,MAAX,CAAkBe,GAAlB,CAAsBL,IAAI,iBACvB,QAAC,UAAD;AAEI,YAAA,IAAI,EAAEA,IAAI,CAACO;AAFf,aACSP,IADT;AAAA;AAAA;AAAA;AAAA,kBADH,CADL,eAOQ,QAAC,aAAD;AAAe,YAAA,OAAO,EAAE,KAAKL;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAPR,qBAQQ;AAAA;AAAA;AAAA;AAAA,kBARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqCH;;AA9GiC;;AAgHtC,eAAed,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport './RosterSection.css';\nimport RosterCard from '../RosterCard/RosterCard';\nimport NewItemButton from '../NewItemButton/NewItemButton';\n\nclass RosterSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rosterMax: 40,\n            rosterMin: 2,  // OR min. should be at least the number of groups created...\n            menuRange: [],\n            keys: [],\n            showRoster: true,\n            roster: [\n                // {key:'', name: \"Kenly\", group: 1},\n                // {key:'', name: \"Victor\", group: 2}\n            ]\n        }\n\n        this.generateItems = this.generateItems.bind(this);\n        this.generateKeys = this.generateKeys.bind(this);\n        this.renderSelectMenu = this.renderSelectMenu.bind(this);\n        this.addItem = this.addItem.bind(this);\n    }    \n\n     //  LIFECYCLE -------------------------------------------------\n    componentDidMount() {\n        this.renderSelectMenu();\n        // this.generateKeys(this.state.roster);\n    }\n\n    generateKeys() {\n        console.log(\"Generating KEYS...\")\n        let keys = [];\n        let roster = this.state.roster;\n        let i = 0;\n        for (let item of roster) {\n            let key = i * 3;\n            item.key = key;\n            item.value = i;\n            i++;\n            console.log(\"KEY: \" + item.key, \n                        \"\\n VALUE: \" + item.value);\n        }\n        // console.log(\"Roster w/keys?\" + roster);\n        this.setState({roster: roster});\n    }\n\n\n    // // Create the options list for dropdown select menu\n    // renderSelectMenu() {\n    //     console.log('Make dropdown menu for roster...');\n    //     // Loop through range of min/max to populate the menuRange array\n    //     let menuRange = [];\n    //     let min = this.state.rosterMin;\n    //     let max = this.state.rosterMax;\n    //     for (let i=min; i<=max; i++) {\n    //         let obj = {key:null, value:i};\n    //         obj.key = i * 3;\n    //         menuRange.push(i);\n    //     }\n    //     this.setState({menuRange: menuRange});\n    //     console.log('MENU RANGE: ' + menuRange);\n    // }\n\n    addItem() {\n        console.log('Add Roster Item...')\n    }\n\n    generateItems() {\n        console.log('Generate roster list base...');\n\n    }\n\n    \n    render() {\n        console.log(\"RANGE::\" + this.state.menuRange);\n        return (\n            <div className=\"roster-container\">\n                <header className=\"roster-nav\">\n                    <div className=\"roster-header-caption \">Roster/Items:</div>\n                    <select name=\"roster\" id=\"roster-select\">\n                        {this.state.menuRange.map(num => {\n                            <option key={num.key} value={num.value}>{num.value}</option>\n                        })}\n\n                    </select>\n                </header>\n\n                <div className=\"roster-items-container\">\n                    \n                    <div id=\"roster-display-wrapper\">\n                        {this.state.roster.map(item => \n                            <RosterCard \n                                key={item} \n                                name={item.name} />\n                        )}\n                        {/* {this.state.roster.length < this.state.max ?  */}\n                            <NewItemButton onClick={this.addItem} /> :\n                            <div></div>\n                        {/* } */}\n                    </div>\n                    \n                    {/* <div className=\"roster-item roster-item--display\">\n                        <div className=\"roster-item--text\">Item 1</div>\n                        <button className=\"roster-delete--button\">X</button>\n                    </div>\n                    <div className=\"roster-item roster-item--new\">\n                        <button className=\"roster-add--button\">+</button>\n                        <div className=\"roster-item--text\">Add Item</div>\n                    </div> */}\n                </div>\n            </div>\n        )\n    }\n }\nexport default RosterSection;"]},"metadata":{},"sourceType":"module"}