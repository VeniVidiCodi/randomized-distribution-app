{"ast":null,"code":"var _jsxFileName = \"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Nav from '../Nav/Nav';\nimport TitleBar from '../TitleBar/TitleBar';\nimport GroupSection from '../GroupSection/GroupSection';\nimport RosterSection from '../RosterSection/RosterSection';\nimport Footer from '../Footer/Footer';\nimport { Group } from '../../groupClass'; // import { Redirect } from 'react-router';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InputPage() {\n  _s();\n\n  let GroupObject = new Group();\n  const [aInput, setInput] = useState(GroupObject);\n  const [aProjectName, setAProjectName] = useState(\"My Project\");\n  const [aGroupNames, setAGroupNames] = useState(['l']);\n  console.log(\"GroupObject:\", GroupObject);\n  console.log(\"aInput:\", aInput);\n  useEffect(() => {\n    console.log(\"useEffect...\");\n    let tempInput = aInput;\n    console.log(tempInput);\n    tempInput.projectName = aProjectName;\n    setInput(tempInput);\n    console.log(aInput);\n  }, [aInput, aProjectName]);\n\n  let shuffleData = () => {\n    console.log(\"shuffle clicked...\");\n    console.log(\"aInput:\", aInput); // Shuffle Roster Items randomly\n    // Assign each roster item a group #\n    // Save shuffle data\n    // return <Redirect push to={{ pathname: '/results', groupObject: aInput, fromInput=true }} />\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TitleBar, {\n        title: aProjectName,\n        \"setTitle-\": setAProjectName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"entry-container\",\n      children: [/*#__PURE__*/_jsxDEV(GroupSection // groupObject={aInput}\n      , {\n        groupNames: aGroupNames,\n        setGroupNames: group => setAGroupNames(group) // removeGroup={aInput.removeGroupNames}\n        // addGroup={this.state.GroupObject.addGroupNames} \n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RosterSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      GroupObject: {\n        aInput\n      },\n      value: \"Shuffle\",\n      text: \"Shuffle\",\n      onClick: shuffleData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InputPage, \"zHGNapsR6qjj+W+S/t715B0U0IQ=\");\n\n_c = InputPage;\nexport default InputPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputPage\");","map":{"version":3,"sources":["/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/InputPage.js"],"names":["React","useState","useEffect","Nav","TitleBar","GroupSection","RosterSection","Footer","Group","InputPage","GroupObject","aInput","setInput","aProjectName","setAProjectName","aGroupNames","setAGroupNames","console","log","tempInput","projectName","shuffleData","group"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CACA;;;;AAIA,SAASC,SAAT,GAAsB;AAAA;;AACpB,MAAIC,WAAW,GAAG,IAAIF,KAAJ,EAAlB;AACA,QAAM,CAACG,MAAD,EAASC,QAAT,IAAqBX,QAAQ,CAACS,WAAD,CAAnC;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,YAAD,CAAhD;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,CAAC,GAAD,CAAD,CAA9C;AAEAgB,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BR,WAA5B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBP,MAAvB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,QAAIC,SAAS,GAAGR,MAAhB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACAA,IAAAA,SAAS,CAACC,WAAV,GAAwBP,YAAxB;AACAD,IAAAA,QAAQ,CAACO,SAAD,CAAR;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACD,GAPQ,EAON,CAACA,MAAD,EAASE,YAAT,CAPM,CAAT;;AAUA,MAAIQ,WAAW,GAAG,MAAM;AACtBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBP,MAAvB,EAFsB,CAItB;AACA;AACA;AAEA;AACD,GATD;;AAWE,sBACI;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEE,YAAjB;AAA+B,qBAAWC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAM,MAAA,EAAE,EAAC,iBAAT;AAAA,8BACE,QAAC,YAAD,CACE;AADF;AAEE,QAAA,UAAU,EAAEC,WAFd;AAGE,QAAA,aAAa,EAAGO,KAAD,IAAWN,cAAc,CAACM,KAAD,CAH1C,CAIE;AACA;;AALF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAgBE,QAAC,MAAD;AACE,MAAA,WAAW,EAAE;AAACX,QAAAA;AAAD,OADf;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,IAAI,EAAC,SAHP;AAIE,MAAA,OAAO,EAAEU;AAJX;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBD;;GAtDMZ,S;;KAAAA,S;AAwDT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Nav from '../Nav/Nav';\nimport TitleBar from '../TitleBar/TitleBar';\nimport GroupSection from '../GroupSection/GroupSection';\nimport RosterSection from '../RosterSection/RosterSection';\nimport Footer from '../Footer/Footer';\nimport { Group } from '../../groupClass';\n// import { Redirect } from 'react-router';\n\n\n\nfunction InputPage () {\n  let GroupObject = new Group();\n  const [aInput, setInput] = useState(GroupObject);\n  const [aProjectName, setAProjectName] = useState(\"My Project\");\n  const [aGroupNames, setAGroupNames] = useState(['l']);\n  \n  console.log(\"GroupObject:\", GroupObject);\n  console.log(\"aInput:\", aInput);\n\n  useEffect(() => {\n    console.log(\"useEffect...\");\n    let tempInput = aInput;\n    console.log(tempInput);\n    tempInput.projectName = aProjectName;\n    setInput(tempInput);\n    console.log(aInput);\n  }, [aInput, aProjectName])\n    \n\n  let shuffleData = () => {\n    console.log(\"shuffle clicked...\");\n    console.log(\"aInput:\", aInput);\n\n    // Shuffle Roster Items randomly\n    // Assign each roster item a group #\n    // Save shuffle data\n\n    // return <Redirect push to={{ pathname: '/results', groupObject: aInput, fromInput=true }} />\n  }\n\n    return (\n        <div>\n          <header className=\"App-header\">\n            <Nav />\n            <TitleBar title={aProjectName} setTitle-={setAProjectName} /> \n            \n          </header>\n          <main id=\"entry-container\">\n            <GroupSection \n              // groupObject={aInput}\n              groupNames={aGroupNames}\n              setGroupNames={(group) => setAGroupNames(group)}\n              // removeGroup={aInput.removeGroupNames}\n              // addGroup={this.state.GroupObject.addGroupNames} \n              />\n            <RosterSection />\n          </main>\n          <Footer \n            GroupObject={{aInput}}\n            value=\"Shuffle\" \n            text=\"Shuffle\"\n            onClick={shuffleData} />\n        </div>\n    );\n  }\n\nexport default InputPage;\n"]},"metadata":{},"sourceType":"module"}