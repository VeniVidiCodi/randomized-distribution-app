{"ast":null,"code":"var _jsxFileName = \"/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/ResultPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Nav from '../Nav/Nav';\nimport ResultDisplay from '../ResultDisplay/ResultDisplay';\nimport Footer from '../Footer/Footer';\nimport ResultsTitle from '../ResultsTitle/ResultsTitle';\nimport { Group, Person, GroupName } from '../../utils/groupClass.js'; //watch out for utils. keep for merge\n\nimport { Redirect } from 'react-router-dom'; //import { nanoid } from 'nanoid';\n\nimport { getRequest, postRequest } from \"../../utils/queries.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ResultsPage(props) {\n  _s();\n\n  let GroupObject = new Group();\n\n  if (props.location.isTrue) {\n    GroupObject = () => {\n      let tempGroup = new Group();\n      tempGroup.persons = props.location.json.persons;\n      tempGroup.groupNames = props.location.json.groupNames;\n      tempGroup.setProjectName(props.location.json.projectName);\n      return tempGroup;\n    };\n  } else {\n    GroupObject = props.location.GroupObject;\n  } // –––––––\n  //  State\n  // –––––––\n\n\n  const [aGroupObject, setGroupObject] = useState(GroupObject);\n  const [fromLandingPage, setFromLandingPage] = useState(props.location.fromLandingPage);\n  const [fromInputPage, setFromInputPage] = useState(props.location.fromInputPage);\n  const [aJson, setAjson] = useState(props.location.json);\n  const [editButtonClicked, setEditButtonClicked] = useState(false);\n  console.log(\"FROM LANDING:\", fromLandingPage);\n  console.log(\"FROM INPUT:\", fromInputPage);\n\n  function handleOnClickSave() {\n    console.log(\"SAVE BUTTON CLICKED...\"); //save to db by using utility component\n\n    const groups = new Group();\n    groups.setProjectName(\"Project Safari\");\n    groups.addPerson(new Person(\"Lion\", 1));\n    groups.addPerson(new Person(\"Elephant\", 2));\n    groups.addGroupNames(new GroupName(\"Section Danger\"));\n    groups.addGroupNames(new GroupName(\"Section Safe\"));\n    var myJSON = JSON.stringify(groups); //aGroupObject\n\n    console.log(myJSON);\n    console.log(JSON.stringify(JSON.parse(myJSON), null, 2));\n    const json = postRequest(myJSON);\n    setAjson(json);\n  } //when the edit button is clicked, setEditButtonClicked is set to true which triggers the conditional below function.\n\n\n  function handleOnClickEdit() {\n    console.log(\"EDIT BUTTON CLICKED...\");\n    setEditButtonClicked(true);\n  } //checks to see if the the edit button is clicked and will redirect the page to inputPage and send state with it.\n\n\n  if (editButtonClicked) {\n    if (fromLandingPage) return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/grouper',\n        GroupObject: aGroupObject,\n        fromLanding: fromLandingPage\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/grouper',\n        json: aJson,\n        fromLandingPage: !fromLandingPage,\n        fromResultPage: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResultsTitle, {\n        title: aGroupObject.projectName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"entry-container\",\n      children: /*#__PURE__*/_jsxDEV(ResultDisplay, {\n        grpObject: aGroupObject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      value: \"Save\",\n      fromInputPage: fromInputPage\n      /* need fromLandingPage boolean */\n      ,\n      fromLandingPage: fromLandingPage,\n      onClickEdit: handleOnClickEdit,\n      onClickSave: handleOnClickSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ResultsPage, \"Y0SVH49jzFNy86k4j1JHo1ierKw=\");\n\n_c = ResultsPage;\nexport default ResultsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"sources":["/Users/victorsanchez/Documents/programming/git/randomized-distribution-app/frontendReact/sordaapp/src/components/AppPages/ResultPage.js"],"names":["React","useState","Nav","ResultDisplay","Footer","ResultsTitle","Group","Person","GroupName","Redirect","getRequest","postRequest","ResultsPage","props","GroupObject","location","isTrue","tempGroup","persons","json","groupNames","setProjectName","projectName","aGroupObject","setGroupObject","fromLandingPage","setFromLandingPage","fromInputPage","setFromInputPage","aJson","setAjson","editButtonClicked","setEditButtonClicked","console","log","handleOnClickSave","groups","addPerson","addGroupNames","myJSON","JSON","stringify","parse","handleOnClickEdit","pathname","fromLanding","fromResultPage"],"mappings":"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","sourcesContent":["\nimport React, { useState,  } from 'react';\nimport Nav from '../Nav/Nav';\nimport ResultDisplay from '../ResultDisplay/ResultDisplay';\nimport Footer from '../Footer/Footer';\nimport ResultsTitle from '../ResultsTitle/ResultsTitle';\nimport {Group, Person, GroupName} from '../../utils/groupClass.js';  //watch out for utils. keep for merge\nimport {Redirect} from 'react-router-dom';\n//import { nanoid } from 'nanoid';\nimport {getRequest, postRequest} from \"../../utils/queries.js\";\n\n\nfunction ResultsPage(props) {\n\n  let GroupObject = new Group();\n  if (props.location.isTrue) {\n    GroupObject = () => {\n       let tempGroup = new Group();\n       tempGroup.persons = props.location.json.persons;\n       tempGroup.groupNames = props.location.json.groupNames;\n       tempGroup.setProjectName(props.location.json.projectName);\n\n       return tempGroup;\n     }\n   } else {\n     GroupObject = props.location.GroupObject;\n   }\n\n   // –––––––\n   //  State\n   // –––––––\n  const [aGroupObject, setGroupObject] = useState(GroupObject);\n  const [fromLandingPage, setFromLandingPage] = useState(props.location.fromLandingPage);\n  const [fromInputPage, setFromInputPage] = useState(props.location.fromInputPage);\n  const [aJson, setAjson] = useState(props.location.json);\n  const [editButtonClicked, setEditButtonClicked] = useState(false)\n  console.log(\"FROM LANDING:\", fromLandingPage);\n  console.log(\"FROM INPUT:\", fromInputPage);\n\n  function handleOnClickSave() {\n    console.log(\"SAVE BUTTON CLICKED...\");\n    //save to db by using utility component\n\n    const groups = new Group();\n\n    groups.setProjectName(\"Project Safari\");\n    groups.addPerson(new Person(\"Lion\", 1));\n    groups.addPerson(new Person(\"Elephant\", 2));\n    groups.addGroupNames(new GroupName(\"Section Danger\"));\n    groups.addGroupNames(new GroupName(\"Section Safe\"));\n    var myJSON = JSON.stringify(groups);  //aGroupObject\n\n    console.log(myJSON);\n    console.log(JSON.stringify(JSON.parse(myJSON), null, 2));\n    const json = postRequest(myJSON);\n    setAjson(json);\n\n  }\n\n\n  //when the edit button is clicked, setEditButtonClicked is set to true which triggers the conditional below function.\n  function handleOnClickEdit(){\n    console.log(\"EDIT BUTTON CLICKED...\");\n    setEditButtonClicked(true);\n  }\n\n\n  //checks to see if the the edit button is clicked and will redirect the page to inputPage and send state with it.\n  if (editButtonClicked){\n    if (fromLandingPage)\n       return <Redirect to={{pathname: '/grouper', GroupObject: aGroupObject, fromLanding: fromLandingPage}}/>;\n\n    return <Redirect to={{pathname: '/grouper', json: aJson, fromLandingPage: !fromLandingPage, fromResultPage: true}}/>;\n  }\n\n\n  return (\n      <div className=\"page-wrapper\">\n        <header>\n          <Nav />\n          <ResultsTitle title={aGroupObject.projectName}/>\n        </header>\n        <main id=\"entry-container\">\n          <ResultDisplay grpObject={aGroupObject}/>\n        </main>\n          <Footer\n            value=\"Save\"\n            fromInputPage={fromInputPage}  /* need fromLandingPage boolean */\n            fromLandingPage={fromLandingPage}\n            onClickEdit={handleOnClickEdit}\n            onClickSave={handleOnClickSave}/>\n      </div>\n  );\n\n}\n\nexport default ResultsPage;\n"]},"metadata":{},"sourceType":"module"}