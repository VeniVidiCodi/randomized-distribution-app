{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/InputCSV/CSVmodal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Modal from \"react-modal\";\nimport { nanoid } from 'nanoid';\nimport \"./CSVmodal.css\";\n\nfunction CSVmodal(props) {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(true);\n  const [array, setArray] = useState(props.arrayValue);\n\n  function handleOnclickYesBtn() {\n    props.handleBtnSubmit(true);\n    toggleModal();\n  }\n\n  function handleOnclickNoBtn() {\n    props.handleBtnSubmit(false);\n    toggleModal();\n  }\n\n  function toggleModal() {\n    setIsOpen(!isOpen);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: toggleModal,\n    contentLabel: \"My dialog\",\n    className: \"mymodal\",\n    overlayClassName: \"myoverlay\",\n    closeTimeoutMS: 250,\n    shouldCloseOnOverlayClick: false,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayData-parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        classsName: \"heading\",\n        children: [\"Here is the list of the \", array.length, \" items of your roster\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), array.map((strValue, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: strValue\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmation-parent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Is your list correct?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-child\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"roster-list-yes-btn\",\n            onClick: handleOnclickYesBtn,\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"roster-list-no-btn\",\n            onClick: handleOnclickNoBtn,\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\n\n_s(CSVmodal, \"9mFuTmsW101Lbsv1LKvxbVeXOsg=\");\n\n_c = CSVmodal;\nexport default CSVmodal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CSVmodal\");","map":{"version":3,"sources":["/Users/kenlyberkowitz/Documents/Working_Folder/express-projects/randomized-distribution-app/frontendReact/sordaapp/src/components/InputCSV/CSVmodal.js"],"names":["React","useState","useEffect","Modal","nanoid","CSVmodal","props","isOpen","setIsOpen","array","setArray","arrayValue","handleOnclickYesBtn","handleBtnSubmit","toggleModal","handleOnclickNoBtn","length","map","strValue","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,gBAAP;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACK,KAAK,CAACK,UAAP,CAAlC;;AAGA,WAASC,mBAAT,GAA+B;AAC7BN,IAAAA,KAAK,CAACO,eAAN,CAAsB,IAAtB;AACAC,IAAAA,WAAW;AACZ;;AAGD,WAASC,kBAAT,GAA8B;AAC5BT,IAAAA,KAAK,CAACO,eAAN,CAAsB,KAAtB;AACAC,IAAAA,WAAW;AACZ;;AAGD,WAASA,WAAT,GAAuB;AACrBN,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD;;AAGD,sBACI,QAAC,KAAD;AACE,IAAA,MAAM,EAAEA,MADV;AAEE,IAAA,cAAc,EAAEO,WAFlB;AAGE,IAAA,YAAY,EAAC,WAHf;AAIE,IAAA,SAAS,EAAC,SAJZ;AAKE,IAAA,gBAAgB,EAAC,WALnB;AAME,IAAA,cAAc,EAAE,GANlB;AAOE,IAAA,yBAAyB,EAAE,KAP7B;AAAA,2BASE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AAAI,QAAA,UAAU,EAAC,SAAf;AAAA,+CAAkDL,KAAK,CAACO,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGP,KAAK,CAACQ,GAAN,CAAU,CAACC,QAAD,EAAWC,KAAX,kBACT;AAAA,kBAAiBD;AAAjB,SAAQC,KAAR;AAAA;AAAA;AAAA;AAAA,cADD,CAFH,eAIE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC,qBAAlB;AAAwC,YAAA,OAAO,EAAEP,mBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,SAAS,EAAC,oBAAlB;AAAuC,YAAA,OAAO,EAAEG,kBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBD;;GA/CQV,Q;;KAAAA,Q;AAiDT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from \"react-modal\";\nimport { nanoid } from 'nanoid';\nimport \"./CSVmodal.css\";\n\nfunction CSVmodal(props) {\n  const [isOpen, setIsOpen] = useState(true);\n  const [array, setArray] = useState(props.arrayValue);\n\n\n  function handleOnclickYesBtn() {\n    props.handleBtnSubmit(true);\n    toggleModal();\n  }\n\n\n  function handleOnclickNoBtn() {\n    props.handleBtnSubmit(false);\n    toggleModal();\n  }\n\n\n  function toggleModal() {\n    setIsOpen(!isOpen);\n  }\n\n\n  return(\n      <Modal\n        isOpen={isOpen}\n        onRequestClose={toggleModal}\n        contentLabel=\"My dialog\"\n        className=\"mymodal\"\n        overlayClassName=\"myoverlay\"\n        closeTimeoutMS={250}\n        shouldCloseOnOverlayClick={false}\n        >\n        <div className='displayData-parent'>\n          <h1 classsName='heading'>Here is the list of the {array.length} items of your roster</h1>\n          {array.map((strValue, index) =>\n            <p key={index} >{strValue}</p>)}\n          <div className='confirmation-parent'>\n            <h2>Is your list correct?</h2>\n            <div className='confirmation-child'>\n              <button className=\"roster-list-yes-btn\" onClick={handleOnclickYesBtn}>Yes</button>\n              <button className=\"roster-list-no-btn\" onClick={handleOnclickNoBtn}>No</button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n  )\n\n}\n\nexport default CSVmodal;\n"]},"metadata":{},"sourceType":"module"}